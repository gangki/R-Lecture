data5 <- gsub((txt[i]), "", data5)
}
i <- 1
for(i in 1 : length(txt)) {
data6 <- gsub((txt[i]), "", data6)
}
i <- 1
for(i in 1 : length(txt)) {
data7 <- gsub((txt[i]), "", data7)
}
i <- 1
for(i in 1 : length(txt)) {
data8 <- gsub((txt[i]), "", data8)
}
i <- 1
for(i in 1 : length(txt)) {
data9 <- gsub((txt[i]), "", data9)
}
i <- 1
for(i in 1 : length(txt)) {
data10 <- gsub((txt[i]), "", data10)
}
i <- 1
for(i in 1 : length(txt)) {
data11 <- gsub((txt[i]), "", data11)
}
i <- 1
for(i in 1 : length(txt)) {
data12 <- gsub((txt[i]), "", data12)
}
wordcount1 <- table(data1)
head(sort(wordcount1, decreasing=T),20)
wordcount2 <- table(data2)
head(sort(wordcount2, decreasing=T),20)
wordcount3 <- table(data3)
head(sort(wordcount3, decreasing=T),20)
wordcount4 <- table(data4)
head(sort(wordcount4, decreasing=T),20)
wordcount5 <- table(data5)
head(sort(wordcount5, decreasing=T),20)
wordcount6 <- table(data6)
head(sort(wordcount6, decreasing=T),20)
wordcount7 <- table(data7)
head(sort(wordcount7, decreasing=T),20)
wordcount8 <- table(data8)
head(sort(wordcount8, decreasing=T),20)
wordcount9 <- table(data9)
head(sort(wordcount9, decreasing=T),20)
wordcount10 <- table(data10)
head(sort(wordcount10, decreasing=T),20)
wordcount11 <- table(data11)
head(sort(wordcount11, decreasing=T),20)
wordcount12 <- table(data12)
head(sort(wordcount12, decreasing=T),20)
write(unlist(data1), "응답소_2015_01_1.txt")
seoul1 <- read.table("응답소_2015_01_1.txt")
write(unlist(data2), "응답소_2015_01_2.txt")
seoul2 <- read.table("응답소_2015_01_2.txt")
write(unlist(data3), "응답소_2015_01_3.txt")
seoul3 <- read.table("응답소_2015_01_3.txt")
write(unlist(data4), "응답소_2015_01_4.txt")
seoul4 <- read.table("응답소_2015_01_4.txt")
write(unlist(data5), "응답소_2015_01_5.txt")
seoul5 <- read.table("응답소_2015_01_5.txt")
write(unlist(data6), "응답소_2015_01_6.txt")
seoul6 <- read.table("응답소_2015_01_6.txt")
write(unlist(data7), "응답소_2015_01_7.txt")
seoul7 <- read.table("응답소_2015_01_7.txt")
write(unlist(data8), "응답소_2015_01_8.txt")
seoul8 <- read.table("응답소_2015_01_8.txt")
write(unlist(data9), "응답소_2015_01_9.txt")
seoul9 <- read.table("응답소_2015_01_9.txt")
write(unlist(data10), "응답소_2015_01_10.txt")
seoul10 <- read.table("응답소_2015_01_10.txt")
write(unlist(data11), "응답소_2015_01_11.txt")
seoul11 <- read.table("응답소_2015_01_11.txt")
write(unlist(data12), "응답소_2015_01_12.txt")
seoul12 <- read.table("응답소_2015_01_12.txt")
wc_seoul1 <- table(seoul1)
head(sort(wc_seoul1, decreasing=T),20)
wc_seoul2 <- table(seoul2)
head(sort(wc_seoul2, decreasing=T),20)
wc_seoul3 <- table(seoul3)
head(sort(wc_seoul3, decreasing=T),20)
wc_seoul4 <- table(seoul4)
head(sort(wc_seoul4, decreasing=T),20)
wc_seoul5 <- table(seoul5)
head(sort(wc_seoul5, decreasing=T),20)
wc_seoul6 <- table(seoul6)
head(sort(wc_seoul6, decreasing=T),20)
wc_seoul7 <- table(seoul7)
head(sort(wc_seoul7, decreasing=T),20)
wc_seoul8 <- table(seoul8)
head(sort(wc_seoul8, decreasing=T),20)
wc_seoul9 <- table(seoul9)
head(sort(wc_seoul9, decreasing=T),20)
wc_seoul10 <- table(seoul10)
head(sort(wc_seoul10, decreasing=T),20)
wc_seoul11 <- table(seoul11)
head(sort(wc_seoul11, decreasing=T),20)
wc_seoul12 <- table(seoul12)
head(sort(wc_seoul12, decreasing=T),20)
palete <- brewer.pal(9, "Set1")
wordcloud(names(wc_seoul1), freq = wc_seoul1, scale = c(2,0.25), rot.per = 0.25,
min.freq = 2, max.words = 200, random.order = F, random.color = T, colors = palete)
legend(0.3,1 ,"1월 서울시 응답소 키워드",cex=0.8,fill=NA,border=NA,bg="white" ,
text.col="red",text.font=2,box.col="red")
wordcloud(names(wc_seoul2), freq = wc_seoul2, scale = c(2,0.25), rot.per = 0.25,
min.freq = 2, max.words = 200, random.order = F, random.color = T, colors = palete)
legend(0.3,1 ,"2월 서울시 응답소 키워드",cex=0.8,fill=NA,border=NA,bg="white" ,
text.col="red",text.font=2,box.col="red")
wordcloud(names(wc_seoul3), freq = wc_seoul3, scale = c(2,0.25), rot.per = 0.25,
min.freq = 2, max.words = 200, random.order = F, random.color = T, colors = palete)
legend(0.3,1 ,"3월 서울시 응답소 키워드",cex=0.8,fill=NA,border=NA,bg="white" ,
text.col="red",text.font=2,box.col="red")
wordcloud(names(wc_seoul4), freq = wc_seoul4, scale = c(2,0.25), rot.per = 0.25,
min.freq = 2, max.words = 200, random.order = F, random.color = T, colors = palete)
legend(0.3,1 ,"4월 서울시 응답소 키워드",cex=0.8,fill=NA,border=NA,bg="white" ,
text.col="red",text.font=2,box.col="red")
wordcloud(names(wc_seoul5), freq = wc_seoul5, scale = c(2,0.25), rot.per = 0.25,
min.freq = 2, max.words = 200, random.order = F, random.color = T, colors = palete)
legend(0.3,1 ,"5월 서울시 응답소 키워드",cex=0.8,fill=NA,border=NA,bg="white" ,
text.col="red",text.font=2,box.col="red")
wordcloud(names(wc_seoul6), freq = wc_seoul6, scale = c(2,0.25), rot.per = 0.25,
min.freq = 2, max.words = 200, random.order = F, random.color = T, colors = palete)
legend(0.3,1 ,"6월 서울시 응답소 키워드",cex=0.8,fill=NA,border=NA,bg="white" ,
text.col="red",text.font=2,box.col="red")
wordcloud(names(wc_seoul7), freq = wc_seoul7, scale = c(2,0.25), rot.per = 0.25,
min.freq = 2, max.words = 200, random.order = F, random.color = T, colors = palete)
legend(0.3,1 ,"7월 서울시 응답소 키워드",cex=0.8,fill=NA,border=NA,bg="white" ,
text.col="red",text.font=2,box.col="red")
wordcloud(names(wc_seoul8), freq = wc_seoul8, scale = c(2,0.25), rot.per = 0.25,
min.freq = 2, max.words = 200, random.order = F, random.color = T, colors = palete)
legend(0.3,1 ,"8월 서울시 응답소 키워드",cex=0.8,fill=NA,border=NA,bg="white" ,
text.col="red",text.font=2,box.col="red")
wordcloud(names(wc_seoul9), freq = wc_seoul9, scale = c(2,0.25), rot.per = 0.25,
min.freq = 2, max.words = 200, random.order = F, random.color = T, colors = palete)
legend(0.3,1 ,"9월 서울시 응답소 키워드",cex=0.8,fill=NA,border=NA,bg="white" ,
text.col="red",text.font=2,box.col="red")
wordcloud(names(wc_seoul10), freq = wc_seoul10, scale = c(2,0.25), rot.per = 0.25,
min.freq = 2, max.words = 200, random.order = F, random.color = T, colors = palete)
legend(0.3,1 ,"10월 서울시 응답소 키워드",cex=0.8,fill=NA,border=NA,bg="white" ,
text.col="red",text.font=2,box.col="red")
wordcloud(names(wc_seoul11), freq = wc_seoul11, scale = c(2,0.25), rot.per = 0.25,
min.freq = 2, max.words = 200, random.order = F, random.color = T, colors = palete)
legend(0.3,1 ,"11월 서울시 응답소 키워드",cex=0.8,fill=NA,border=NA,bg="white" ,
text.col="red",text.font=2,box.col="red")
wordcloud(names(wc_seoul12), freq = wc_seoul12, scale = c(2,0.25), rot.per = 0.25,
min.freq = 2, max.words = 200, random.order = F, random.color = T, colors = palete)
legend(0.3,1 ,"12월 서울시 응답소 키워드",cex=0.8,fill=NA,border=NA,bg="white" ,
text.col="red",text.font=2,box.col="red")
head(sort(wc_seoul1, decreasing=T),20)
head(sort(wc_seoul2, decreasing=T),20)
wc_seoul1 <- table(seoul1)
head(sort(wc_seoul1, decreasing=T),20)
wc_seoul2 <- table(seoul2)
head(sort(wc_seoul2, decreasing=T),20)
wc_seoul3 <- table(seoul3)
head(sort(wc_seoul3, decreasing=T),20)
wc_seoul4 <- table(seoul4)
head(sort(wc_seoul4, decreasing=T),20)
wc_seoul5 <- table(seoul5)
head(sort(wc_seoul5, decreasing=T),20)
wc_seoul6 <- table(seoul6)
head(sort(wc_seoul6, decreasing=T),20)
wc_seoul7 <- table(seoul7)
head(sort(wc_seoul7, decreasing=T),20)
wc_seoul8 <- table(seoul8)
head(sort(wc_seoul8, decreasing=T),20)
wc_seoul9 <- table(seoul9)
head(sort(wc_seoul9, decreasing=T),20)
wc_seoul10 <- table(seoul10)
head(sort(wc_seoul10, decreasing=T),20)
wc_seoul11 <- table(seoul11)
head(sort(wc_seoul11, decreasing=T),20)
wc_seoul12 <- table(seoul12)
head(sort(wc_seoul12, decreasing=T),20)
install.packages("wordcloud2")
library(wordcloud2)
wordcloud2(wc_seoul1)
wordcloud2(names(wc_seoul12), freq = wc_seoul12, scale = c(2,0.25), rot.per = 0.25,
min.freq = 2, max.words = 200, random.order = F, random.color = T, colors = palete)
wordcloud(names(wc_seoul1), freq = wc_seoul1, scale = c(2,0.25), rot.per = 0.25,
min.freq = 2, max.words = 200, random.order = F, random.color = T, colors = palete)
legend(0.3,1 ,"1월 서울시 응답소 키워드",cex=0.8,fill=NA,border=NA,bg="white" ,
text.col="red",text.font=2,box.col="red")
wordcloud(names(wc_seoul2), freq = wc_seoul2, scale = c(2,0.25), rot.per = 0.25,
min.freq = 2, max.words = 200, random.order = F, random.color = T, colors = palete)
legend(0.3,1 ,"2월 서울시 응답소 키워드",cex=0.8,fill=NA,border=NA,bg="white" ,
text.col="red",text.font=2,box.col="red")
wordcloud(names(wc_seoul3), freq = wc_seoul3, scale = c(2,0.25), rot.per = 0.25,
min.freq = 2, max.words = 200, random.order = F, random.color = T, colors = palete)
legend(0.3,1 ,"3월 서울시 응답소 키워드",cex=0.8,fill=NA,border=NA,bg="white" ,
text.col="red",text.font=2,box.col="red")
wordcloud(names(wc_seoul1), freq = wc_seoul1, scale = c(2,0.25), rot.per = 0.25,
min.freq = 2, max.words = 200, random.order = F, random.color = T, colors = palete)
legend(0.3,1 ,"1월 서울시 응답소 키워드",cex=0.8,fill=NA,border=NA,bg="white" ,
text.col="red",text.font=2,box.col="red")
wordcloud(names(wc_seoul2), freq = wc_seoul2, scale = c(2,0.25), rot.per = 0.25,
min.freq = 2, max.words = 200, random.order = F, random.color = T, colors = palete)
legend(0.3,1 ,"2월 서울시 응답소 키워드",cex=0.8,fill=NA,border=NA,bg="white" ,
text.col="red",text.font=2,box.col="red")
wordcloud(names(wc_seoul3), freq = wc_seoul3, scale = c(2,0.25), rot.per = 0.25,
min.freq = 2, max.words = 200, random.order = F, random.color = T, colors = palete)
legend(0.3,1 ,"3월 서울시 응답소 키워드",cex=0.8,fill=NA,border=NA,bg="white" ,
text.col="red",text.font=2,box.col="red")
wordcloud(names(wc_seoul4), freq = wc_seoul4, scale = c(2,0.25), rot.per = 0.25,
min.freq = 2, max.words = 200, random.order = F, random.color = T, colors = palete)
legend(0.3,1 ,"4월 서울시 응답소 키워드",cex=0.8,fill=NA,border=NA,bg="white" ,
text.col="red",text.font=2,box.col="red")
plot.new()
wordcloud(names(wc_seoul2), freq = wc_seoul2, scale = c(2,0.25), rot.per = 0.25,
min.freq = 2, max.words = 200, random.order = F, random.color = T, colors = palete)
legend(0.3,1 ,"2월 서울시 응답소 키워드",cex=0.8,fill=NA,border=NA,bg="white" ,
text.col="red",text.font=2,box.col="red")
wordcloud(names(wc_seoul1), freq = wc_seoul1, scale = c(2,0.25), rot.per = 0.25,
min.freq = 2, max.words = 200, random.order = F, random.color = T, colors = palete)
legend(0.3,1 ,"1월 서울시 응답소 키워드",cex=0.8,fill=NA,border=NA,bg="white" ,
text.col="red",text.font=2,box.col="red")
plot.new()
wordcloud(names(wc_seoul2), freq = wc_seoul2, scale = c(2,0.25), rot.per = 0.25,
min.freq = 2, max.words = 200, random.order = F, random.color = T, colors = palete)
legend(0.3,1 ,"2월 서울시 응답소 키워드",cex=0.8,fill=NA,border=NA,bg="white" ,
text.col="red",text.font=2,box.col="red")
palete <- brewer.pal(9, "Set1")
wordcloud(names(wc_seoul1), freq = wc_seoul1, scale = c(2,0.25), rot.per = 0.25,
min.freq = 2, max.words = 200, random.order = F, random.color = T, colors = palete)
legend(0.3,1 ,"1월 서울시 응답소 키워드",cex=0.8,fill=NA,border=NA,bg="white" ,
text.col="red",text.font=2,box.col="red")
plot.new()
wordcloud(names(wc_seoul2), freq = wc_seoul2, scale = c(2,0.25), rot.per = 0.25,
min.freq = 2, max.words = 200, random.order = F, random.color = T, colors = palete)
legend(0.3,1 ,"2월 서울시 응답소 키워드",cex=0.8,fill=NA,border=NA,bg="white" ,
text.col="red",text.font=2,box.col="red")
plot.new()
wordcloud(names(wc_seoul2), freq = wc_seoul2, scale = c(2,0.25), rot.per = 0.25,
min.freq = 2, max.words = 200, random.order = F, random.color = T, colors = palete)
legend(0.3,1 ,"2월 서울시 응답소 키워드",cex=0.8,fill=NA,border=NA,bg="white" ,
text.col="red",text.font=2,box.col="red")
plot.new()
palete <- brewer.pal(9, "Set1")
wordcloud(names(wc_seoul1), freq = wc_seoul1, scale = c(2,0.25), rot.per = 0.25,
min.freq = 2, max.words = 200, random.order = F, random.color = T, colors = palete)
legend(0.3,1 ,"1월 서울시 응답소 키워드",cex=0.8,fill=NA,border=NA,bg="white" ,
text.col="red",text.font=2,box.col="red")
frame()
wordcloud2(wc_seoul12)
class(wc_seoul12)
install.packages("ggiraphExtra")
install.packages("maps")
library(ggiraphExtra)
library(tibble)
library(ggplot2)
library(dplyr)
library(reshape2)
str(USArrests)
head(USArrests)
tail(USArrests)
summary(USArrests)
crime <- rownames_to_column(USArrests, var = "state")
crime$state <- tolower(crime$state)
# 미국 주 지도 데이터 준비하기
states_map <- map_data("state")
str(states_map)
# 단계 구분도 만들기
ggChoropleth(data = crime, aes(fill = Murder, map_id = state), map = states_map, interactive = T)
library(maps)
# 단계 구분도 만들기
ggChoropleth(data = crime, aes(fill = Murder, map_id = state), map = states_map, interactive = T)
install.packages("maps")
install.packages("maps")
maps
library(maps)
crime <- rownames_to_column(USArrests, var = "state")
crime$state <- tolower(crime$state)
# 미국 주 지도 데이터 준비하기
states_map <- map_data("state")
str(states_map)
# 단계 구분도 만들기
ggChoropleth(data = crime, aes(fill = Murder, map_id = state), map = states_map, interactive = T)
library(maps)
library(ggiraphExtra)
library(tibble)
library(ggplot2)
library(dplyr)
library(reshape2)
str(USArrests)
head(USArrests)
tail(USArrests)
summary(USArrests)
crime <- rownames_to_column(USArrests, var = "state")
crime$state <- tolower(crime$state)
# 미국 주 지도 데이터 준비하기
states_map <- map_data("state")
str(states_map)
# 단계 구분도 만들기
ggChoropleth(data = crime, aes(fill = Murder, map_id = state), map = states_map, interactive = T)
library(maps)
library(ggiraphExtra)
library(tibble)
library(ggplot2)
library(dplyr)
library(reshape2)
str(USArrests)
crime <- rownames_to_column(USArrests, var = "state")
crime$state <- tolower(crime$state)
crime
# 미국 주 지도 데이터 준비하기
states_map <- map_data("state")
states_map
str(states_map)
# 단계 구분도 만들기
ggChoropleth(data = crime, aes(fill = Murder, map_id = state), map = states_map, interactive = T)
library(ggiraphExtra)
# 단계 구분도 만들기
ggChoropleth(data = crime, aes(fill = Murder, map_id = state), map = states_map, interactive = T)
# 단계 구분도 만들기
ggChoropleth(data = crime,
aes(fill = Murder,      # 색의 변화 기준이 되는 변수
map_id = state),    # 지역 기준 변수 == 지역 명 변수
map = states_map)       # 배경 지도 데이터
install.packages("ggmap")
# 단계 구분도 만들기
ggChoropleth(data = crime,
aes(fill = Murder,      # 색의 변화 기준이 되는 변수
map_id = state),    # 지역 기준 변수 == 지역 명 변수
map = states_map)       # 배경 지도 데이터
library(ggmap)
# 단계 구분도 만들기
ggChoropleth(data = crime,
aes(fill = Murder,      # 색의 변화 기준이 되는 변수
map_id = state),    # 지역 기준 변수 == 지역 명 변수
map = states_map)       # 배경 지도 데이터
# 단계 구분도 만들기
ggChoropleth(data = crime,
aes(fill = Murder,      # 색의 변화 기준이 되는 변수
map_id = state),    # 지역 기준 변수 == 지역 명 변수
map = states_map)       # 배경 지도 데이터
install.packages("maps")
install.packages("maps")
library(maps)
library(tibble)
library(maps)
library(ggiraphExtra)
library(tibble)
library(ggplot2)
library(dplyr)
library(reshape2)
# 단계 구분도 만들기
ggChoropleth(data = crime,
aes(fill = Murder,      # 색의 변화 기준이 되는 변수
map_id = state),    # 지역 기준 변수 == 지역 명 변수
map = states_map)       # 배경 지도 데이터
library(maps)
library(ggiraphExtra)
library(tibble)
library(ggplot2)
library(dplyr)
library(reshape2)
str(USArrests)
head(USArrests)
tail(USArrests)
summary(USArrests)
crime <- rownames_to_column(USArrests, var = "state")
crime$state <- tolower(crime$state)
# 미국 주 지도 데이터 준비하기
states_map <- map_data("state")
str(states_map)
# 단계 구분도 만들기
ggChoropleth(data = crime,
aes(fill = Murder,      # 색의 변화 기준이 되는 변수
map_id = state),    # 지역 기준 변수 == 지역 명 변수
map = states_map)       # 배경 지도 데이터
install.packages("mapproj")
library(mapproj)
library(mapproj)
library(maps)
library(ggiraphExtra)
library(tibble)
library(ggplot2)
library(dplyr)
library(reshape2)
str(USArrests)
head(USArrests)
tail(USArrests)
summary(USArrests)
crime <- rownames_to_column(USArrests, var = "state")
crime$state <- tolower(crime$state)
# 미국 주 지도 데이터 준비하기
states_map <- map_data("state")
str(states_map)
# 단계 구분도 만들기
ggChoropleth(data = crime,
aes(fill = Murder,      # 색의 변화 기준이 되는 변수
map_id = state),    # 지역 기준 변수 == 지역 명 변수
map = states_map)       # 배경 지도 데이터
ggChoropleth(data = crime,
aes(fill = Murder,      # 색의 변화 기준이 되는 변수
map_id = state),    # 지역 기준 변수 == 지역 명 변수
map = states_map,       # 배경 지도 데이터
interactive = T)        # 인터랙티브 유무
library(gridExtra)
crime
# 미국 주별 강간범죄 분포
ggChoropleth(data = crime,
aes(fill = Assault,      # 색의 변화 기준이 되는 변수
map_id = state),    # 지역 기준 변수 == 지역 명 변수
map = states_map,       # 배경 지도 데이터
interactive = T)        # 인터랙티브 유무
# 미국 주별 강도범죄 분포
# 미국 주별 도시비율
head(crime)
# 미국 주별 강간범죄 분포
ggChoropleth(data = crime,
aes(fill = rape,      # 색의 변화 기준이 되는 변수
map_id = state),    # 지역 기준 변수 == 지역 명 변수
map = states_map,       # 배경 지도 데이터
interactive = T)        # 인터랙티브 유무
# 미국 주별 강간범죄 분포
ggChoropleth(data = crime,
aes(fill = Rape,      # 색의 변화 기준이 되는 변수
map_id = state),    # 지역 기준 변수 == 지역 명 변수
map = states_map,       # 배경 지도 데이터
interactive = T)        # 인터랙티브 유무
# 미국 주별 도시비율
ggChoropleth(data = crime,
aes(fill = UrbanPop,      # 색의 변화 기준이 되는 변수
map_id = state),    # 지역 기준 변수 == 지역 명 변수
map = states_map,       # 배경 지도 데이터
interactive = T)        # 인터랙티브 유무
# 단계 구분도 만들기
m -< ggChoropleth(data = crime,
aes(fill = Murder,      # 색의 변화 기준이 되는 변수
map_id = state),    # 지역 기준 변수 == 지역 명 변수
map = states_map)       # 배경 지도 데이터
# 단계 구분도 만들기
m <- ggChoropleth(data = crime,
aes(fill = Murder,      # 색의 변화 기준이 되는 변수
map_id = state),    # 지역 기준 변수 == 지역 명 변수
map = states_map)       # 배경 지도 데이터
m <- mggChoropleth(data = crime,
aes(fill = Murder,      # 색의 변화 기준이 되는 변수
map_id = state),    # 지역 기준 변수 == 지역 명 변수
map = states_map,       # 배경 지도 데이터
interactive = T)        # 인터랙티브 유무
m <- ggChoropleth(data = crime,
aes(fill = Murder,      # 색의 변화 기준이 되는 변수
map_id = state),    # 지역 기준 변수 == 지역 명 변수
map = states_map,       # 배경 지도 데이터
interactive = T)        # 인터랙티브 유무
# 미국 주별 강간범죄 분포
r <- ggChoropleth(data = crime,
aes(fill = Rape,      # 색의 변화 기준이 되는 변수
map_id = state),    # 지역 기준 변수 == 지역 명 변수
map = states_map,       # 배경 지도 데이터
interactive = T)        # 인터랙티브 유무
# 미국 주별 강도범죄 분포
a <- ggChoropleth(data = crime,
aes(fill = Assault,      # 색의 변화 기준이 되는 변수
map_id = state),    # 지역 기준 변수 == 지역 명 변수
map = states_map,       # 배경 지도 데이터
interactive = T)        # 인터랙티브 유무
# 미국 주별 도시비율
u <- ggChoropleth(data = crime,
aes(fill = UrbanPop,      # 색의 변화 기준이 되는 변수
map_id = state),    # 지역 기준 변수 == 지역 명 변수
map = states_map,       # 배경 지도 데이터
interactive = T)        # 인터랙티브 유무
grid.arrange(m, r, a, u, ncol=2)
windows()
grid.arrange(m, r, a, u, ncol=2)
library(gridExtra)
windows()
grid.arrange(m, r, a, u, ncol=2)
u
install.packages(stringi)
install.packages("stringi")
install.packages("stringi")
install.packages("devtools")
install.packages("kormaps2014")
devtools::install_github("cardiomoon/kormaps2014")
library(DT)
library(devtools)
library(kormaps2014)
# 시도별 인구 데이터
str(changeCode(korpop1))
# 지도 데이터
str(changeCode(kormap1))
library(dplyr)
korpop1 <- korpop1 %>%
rename(pop  = 총인구_명,
name = 행정구역별_읍면동)
korpop1
head(korpop1)
korpop1
library(ggiraphExtra)
library(ggplot2)
ggChoropleth(data = korpop1,       # 지도에 표현할 데이터
aes(fill    = pop,    # 색깔로 표현할 변수
map_id  = code,   # 지역 기준 변수
tooltip = name),  # 지도 위에 표시할 지역명
map = kormap1,        # 지도 데이터
interactive = T)        # 인터랙티브
tbc
ggChoropleth(data = tbc,            # 지도에 표현할 데이터
aes(fill    = NewPts,  # 색깔로 표현할 변수
map_id  = code,    # 지역 기준 변수
tooltip = name),   # 지도 위에 표시할 지역명
map = kormap1,         # 지도 데이터
interactive = T)       # 인터랙티브
# options(encoding = "UTF-8") 한글이 깨지므로 인코딩을 UTF-8 로 변경
str(changeCode(tbc))
