inspect(corp1) # corpus 안의 내용 살펴보기
tdm
m
stopwords('en')
corp1
tdm
m
corp2 <- tm_map(corp1,stripWhitespace)
corp2
corp2 <- tm_map(corp2,tolower)
corp2 <- tm_map(corp2,removeNumbers)
corp2 <- tm_map(corp2,removePunctuation)
corp2 <- tm_map(corp2,PlainTextDocument)
library("tm")
corp2 <- tm_map(corp1,stripWhitespace)
tdm2 <- TermDocumentMatrix(corp2)
tdm2
m2 <- as.matrix(tdm2)
m2
class(m2)
colnames(m2) <- c(1:4)
m2
colnames(m2) <- seq(10,40,10)
m2
freq1 <- sort(rowSums(m2),decreasing=T)
head(freq1,20)
freq2 <- sort(colSums(m2),decreasing=T)
head(freq2,20)
m <- as.matrix(tdm)
m
corp2 <- tm_map(corp1,stripWhitespace)
head(freq2,20)
tdm2
m2
findFreqTerms(tdm2,2)
library(RColorBrewer)
palete <- brewer.pal(7,"Set3")
wordcloud(names(freq1), freq=freq1, scale=c(5,1), min.freq=1, colors=palete,
random.order=F, random.color=T)
wordcloud(names(freq1), freq=freq1, scale=c(5,1), min.freq=1, colors=palete, random.order=F, random.color=T)
wordcloud(names(freq1), freq=freq1, scale=c(5,1), min.freq=1, colors=palete, random.order=F, random.color=T)
legend(0.3,1 ,"tm Package Test #1 ",cex=1,
fill=NA,border=NA,bg="white" ,
text.col="red",text.font=2,box.col="red")
wordcloud(names(freq1), freq=freq1, scale=c(5,1), min.freq=1, colors=palete, random.order=F, random.color=T)
legend(0.3,1 ,"tm Package Test #1 ",cex=1,
fill=NA,border=NA,bg="white" ,
text.col="red",text.font=2,box.col="red")
wordcloud(names(freq1), freq=freq1, scale=c(5,1), min.freq=1, colors=palete,
random.order=F, random.color=T)
legend(0.3,1 ,"tm Package Test #1 ",cex=1,
fill=NA,border=NA,bg="white" ,
text.col="red",text.font=2,box.col="red")
wordcloud(names(freq1), freq=freq1, scale=c(5,1), min.freq=1, colors=palete,
random.order=F, random.color=T)
legend(0.3,1 ,"tm Package Test #1 ",cex=1,
fill=NA,border=NA,bg="white" ,
text.col="red",text.font=2,box.col="red")
data1 <- readLines("tm_test1.txt")
data1
data1 <- readLines("tm_test1.txt")
data1
data1 <- readLines("steve.txt")
data1
class(data1)
corp1 <- Corpus(VectorSource(data1))
corp1
inspect(corp1) # corpus 안의 내용 살펴보기
tdm <- TermDocumentMatrix(corp1)
tdm
m <- as.matrix(tdm)
m
corp2 <- tm_map(corp1,stripWhitespace)
corp2 <- tm_map(corp2,tolower)
corp2 <- tm_map(corp2,removeNumbers)
corp2 <- tm_map(corp2,removePunctuation)
# corp2 <- tm_map(corp2,PlainTextDocument)
# sword2 <- c(stopwords('en'),"and","but",”not”)
corp2 <- tm_map(corp2,removeWords,sword2)
tdm2 <- TermDocumentMatrix(corp2)
tdm2
m2 <- as.matrix(tdm2)
m2
class(m2)
colnames(m2) <- seq(1,59,1)
m2
freq1 <- sort(rowSums(m2),decreasing=T)
head(freq1,20)
freq2 <- sort(colSums(m2),decreasing=T)
head(freq2,20)
findFreqTerms(tdm2,2)
palete <- brewer.pal(7,"Set3")
wordcloud(names(freq1), freq=freq1, scale=c(5,1), min.freq=1, colors=palete,
random.order=F, random.color=T)
legend(0.3,1 ,"tm Package Test #1 ",cex=1,
fill=NA,border=NA,bg="white" ,
text.col="red",text.font=2,box.col="red")
wordcloud(names(freq1), freq=freq1, scale=c(5,1), min.freq=1, colors=palete,
random.order=F, random.color=T)
data1 <- readLines("steve.txt")
data1
class(data1)
corp1 <- Corpus(VectorSource(data1))
corp1
stopwords('en')
corp2 <- tm_map(corp1,stripWhitespace)
corp1 <- VCorpus(VectorSource(data1))
corp1
corp2 <- tm_map(corp1,stripWhitespace)
corp2 <- tm_map(corp2,tolower)
corp2 <- tm_map(corp2,removeNumbers)
corp2 <- tm_map(corp2,removePunctuation)
corp2 <- tm_map(corp2,PlainTextDocument)
sword2 <- c(stopwords('en'),"and","but",”not”)
sword2 <- c(stopwords('en'),"and","but", "not")
corp2 <- tm_map(corp2,removeWords,sword2)
tdm2 <- TermDocumentMatrix(corp2)
tdm2
m2 <- as.matrix(tdm2)
m2
class(m2)
colnames(m2) <- seq(1,59,1)
m2
freq1 <- sort(rowSums(m2),decreasing=T)
head(freq1,20)
freq2 <- sort(colSums(m2),decreasing=T)
head(freq2,20)
findFreqTerms(tdm2,2)
palete <- brewer.pal(7,"Set3")
wordcloud(names(freq1), freq=freq1, scale=c(5,1), min.freq=1, colors=palete,
random.order=F, random.color=T)
head(freq1,20)
head(freq2,20)
wordcloud(names(freq1), freq=freq1, scale=c(5,1), min.freq=1, colors=palete,
random.order=F, random.color=T)
legend(0.3,1 ,"tm Package Test #1 ",cex=1,
fill=NA,border=NA,bg="white" ,
text.col="red",text.font=2,box.col="red")
setwd("D:/Workspace/R-Lecture/Part2/Stage1_Word Cloud/Ex05_Reg")
library(KoNLP)
library(wordcloud)
library(RColorBrewer)
alert <- readLines("oracle_alert_testdb.log")
head(alert, 10)
error_1 <- gsub(" ", "_", alert)
head(unlist(error_1), 20)
error_1
error_2 <- unlist(error_1)
error_2<- Filter(function(x) {nchar(x) >= 5}, error_2)
error_2
head(error_2, 10)
head(alert, 10)
head(error_2, 10)
error_3 <- grep("^ORA-+", error_2, value=T)
head(unlist(error_3), 20)
write(unlist(error_3),"alert_testdb2.log")
rev <- read.table("alert_testdb2.log")
nrow(rev)
errorcount <- table(rev)
head(sort(errorcount, decreasing=T),20)
palete <- brewer.pal(9, "Set1")
wordcloud(names(errorcount),freq=errorcount,scale=c(5,0.5),rot.per=0.25,min.freq=3,
random.order=F,random.color=T,colors=palete)
wordcloud(names(errorcount),freq=errorcount,scale=c(5,0.5),rot.per=0.25,min.freq=3,
random.order=F,random.color=T,colors=palete)
wordcloud(names(errorcount),freq=errorcount,scale=c(3,0.5),rot.per=0.25,min.freq=3,
random.order=F,random.color=T,colors=palete)
legend(0.3,1 ,"Oracle Alert Log File 분석 결과       ",cex=0.8,fill=NA , border=NA ,
+ bg="white" ,  text.col="red",text.font=2,box.col="red")
legend(0.3,1 ,"Oracle Alert Log File 분석 결과       ",cex=0.8,fill=NA , border=NA ,
bg="white" ,  text.col="red",text.font=2,box.col="red")
wordcloud(names(errorcount),freq=errorcount,scale=c(3,0.5),rot.per=0.25,min.freq=3,
random.order=F,random.color=T,colors=palete)
legend(0.3,1 ,"Oracle Alert Log File 분석 결과       ",cex=0.8,fill=NA , border=NA ,
bg="white" ,  text.col="red",text.font=2,box.col="red")
head(sort(errorcount, decreasing=T),20)
wordcloud(names(errorcount),freq=errorcount,scale=c(3,0.25),rot.per=0.25,min.freq=3,
random.order=F,random.color=T,colors=palete)
head(sort(errorcount, decreasing=T),20)
rm(list())
setwd("D:/Workspace/R-Lecture/Part2/Stage2_Graph/Ex01_Jeju")
setwd("D:/Workspace/R-Lecture/Part2/Stage2_Graph/Ex01_Jeju")
library(KoNLP)
library(wordcloud)
library(stringr)  # <- 패키지를 로딩합니다
useSejongDic()
mergeUserDic(data.frame(readLines("제주도여행지.txt"), "ncn"))
buidDictionary(data.frame(readLines("제주도여행지.txt"), "ncn"))
txt <- readLines("jeju.txt")
place <- sapply(txt,extractNoun,USE.NAMES=F)
place
head(unlist(place), 30)
cdata <- unlist(place)
place <- str_replace_all(cdata,"[^[:alpha:]]","")
txt <- readLines("jeju.txt")
place <- sapply(txt,extractNoun,USE.NAMES=F)
place
head(unlist(place), 30)
cdata <- unlist(place)
place <- str_replace_all(cdata,"[^[:alpha:]]","")
place <- gsub(" ","", place)
txt <- readLines("제주도여행코스gsub.txt")
txt
cnt_txt <- length(txt)
cnt_txt
for( i in 1:cnt_txt) {
place <-gsub((txt[i]),"",place)
}
place
place <- Filter(function(x) {nchar(x) >= 2} ,place)
write(unlist(place),"jeju_2.txt")
rev <- read.table("jeju_2.txt")
nrow(rev)
wordcount <- table(rev)
head(sort(wordcount, decreasing=T),30)
top10 <- head(sort(wordcount, decreasing=T),10)
pie(top10,main="제주도 추천 여행 코스 TOP 10")
pie(top10, col = rainvow(10), radius = 1, main="제주도 추천 여행 코스 TOP 10")
pie(top10, col = rainvow(10), radius = 1, main="제주도 추천 여행 코스 TOP 10")
pie(top10, col = rainbow(10), radius = 1, main="제주도 추천 여행 코스 TOP 10")
pie(top10, col = rainbow(10), radius = 1, main="제주도 추천 여행 코스 TOP 10")
library(RColorBrewer)
palete <- brewer.pal(10, BrBG)
palete <- brewer.pal(10, "BrBG")
pie(top10, col = palete, radius = 1, main="제주도 추천 여행 코스 TOP 10")
palete <- brewer.pal(10, "Spectral")
pie(top10, col = palete, radius = 1, main="제주도 추천 여행 코스 TOP 10")
palete <- brewer.pal(10, "Paired")
pie(top10, col = palete, radius = 1, main="제주도 추천 여행 코스 TOP 10")
pct <- round(top10/sum(top10) * 100 ,1)
names(top10)
lab <- paste(names(top10),"\n", pct, "%")
lab
lab <- paste(names(top10),"\n", pct, "%", sep = "")
lab
pie(top10,main="제주도 추천 여행 코스 TOP 10",col=palete,
cex=0.8,labels = lab)
# ggplot2를 이용하여 pie차트 그리기
top10
class(top10)
str(top10)
df_top10 <- as.data.frame(top10)
str(top10)
df_top10 <- as.data.frame(top10)
str(top10)
df_top10
library(ggplot2)
ggplot(df_top10, aes(x = '', y=Freq, fill=rev)), geom_bar(width=1, stat='identity')
ggplot(df_top10, aes(x='', y=Freq, fill=rev)), geom_bar(width=1, stat='identity')
ggplot(df_top10, aes(x='', y=Freq, fill=rev)), geom_bar(width=1, stat='identity')
ggplot(df_top10, aes(x='', y=Freq, fill=rev)) +
geom_bar(width=1, stat='identity')
ggplot(df_top10, aes(x='', y=Freq, fill=rev)) +
geom_bar(width=1, stat='identity') +
coord_polar("y", start = 0)
df_top10
library(dplyr)
options(digits = 2)
df_top10 <- df_top10 %>%
mutate(pct = Freq/sum(Freq) * 100)
df_top10
df_top10
df_top10 <- df_top10 %>%
mutate(pct = Freq / sum(Freq) * 100) %>%
mutate(ylabe = paste(sprintf("%4.1f", pct), '%', sep = ''))
df_top10
ggplot(df_top10, aes(x='', y=Freq, fill=rev)) +
geom_bar(width=1, stat='identity')
df_top10 <- df_top10 %>%
mutate(pct = Freq / sum(Freq) * 100) %>%
#mutate(ylabe = paste(pct, '%', sep = '')) 이렇게 하면 소수점 전부 표시됨
mutate(ylabe = paste(sprintf("%4.1f", pct), '%', sep = '')) %>%
arrange(desc(rev)) %>%
mutate(ypos = cumsum(pct) - 0.5 * pct)
df_top10
ggplot(df_top10, aes(x='', y=Freq, fill=rev)) +
geom_bar(width=1, stat='identity') +
geom_text(aes(y=ypos, label=ylabel)), color = 'black'
ggplot(df_top10, aes(x='', y=Freq, fill=rev)) +
geom_bar(width=1, stat='identity') +
geom_text(aes(y=ypos, label=ylabel)), color = 'black')
ggplot(df_top10, aes(x='', y=Freq, fill=rev)) +
geom_bar(width=1, stat='identity') +
geom_text(aes(y=ypos, label=ylabel)), color = 'black')
ggplot(df_top10, aes(x='', y=Freq, fill=rev)) +
geom_bar(width=1, stat='identity') +
geom_text(aes(y=ypos, label=ylabel)), color = 'black')
ggplot(df_top10, aes(x='', y=Freq, fill=rev)) +
geom_bar(width=1, stat='identity') +
coord_polar("y", start = 0) +
ggtitle("제주도 추천 여행코스 TOP 10")
ggplot(df_top10, aes(x='', y=Freq, fill=rev)) +
geom_bar(width=1, stat='identity') +
coord_polar("y", start = 0) +
ggtitle("제주도 추천 여행코스 TOP 10") +
geom_text(aes(y=ypos, label=ylabel)), color = 'black')
df_top10
ggplot(df_top10, aes(x='', y=Freq, fill=rev)) +
geom_bar(width=1, stat='identity') +
coord_polar("y", start = 0) +
ggtitle("제주도 추천 여행코스 TOP 10") +
geom_text(aes(y=ypos, label=ylabel)), color = 'black')
ggplot(df_top10, aes(x='', y=Freq, fill=rev)) +
geom_bar(width=1, stat='identity')
ggplot(df_top10, aes(x='', y=Freq, fill=rev)) +
geom_bar(width=1, stat='identity') +
coord_polar("y", start = 0)
df_top10 <- df_top10 %>%
mutate(pct = Freq / sum(Freq) * 100) %>%
#mutate(ylabe = paste(pct, '%', sep = '')) 이렇게 하면 소수점 전부 표시됨
mutate(ylabel = paste(sprintf("%4.1f", pct), '%', sep = '')) %>%
arrange(desc(rev)) %>%
mutate(ypos = cumsum(pct) - 0.5 * pct)
df_top10
df_top10
ggplot(df_top10, aes(x='', y=Freq, fill=rev)) +
geom_bar(width=1, stat='identity') +
coord_polar("y", start = 0) +
ggtitle("제주도 추천 여행코스 TOP 10") +
geom_text(aes(y=ypos, label=ylabel)), color = 'black')
df_top10 <- df_top10 %>%
mutate(pct = Freq / sum(Freq) * 100) %>%
mutate(ylabel = paste(sprintf("%4.1f", pct), '%', sep = '')) %>%
arrange(desc(rev)) %>%
mutate(ypos = cumsum(pct) - 0.5 * pct)
#mutate(ylabel = paste(pct, '%', sep = '')) 이렇게 하면 소수점 전부 표시됨
df_top10
# ggplot2를 이용하여 pie차트 그리기
top10
str(top10)
df_top10 <- as.data.frame(top10)
str(top10)
ggplot(df_top10, aes(x='', y=Freq, fill=rev)) +
geom_bar(width=1, stat='identity')
ggplot(df_top10, aes(x='', y=Freq, fill=rev)) +
geom_bar(width=1, stat='identity') +
coord_polar("y", start = 0)
options(digits = 2) # 전체 옵션, .O 쓰겠다
df_top10 <- df_top10 %>%
mutate(pct = Freq / sum(Freq) * 100) %>%
mutate(ylabel = paste(sprintf("%4.1f", pct), '%', sep = '')) %>%
arrange(desc(rev)) %>%
mutate(ypos = cumsum(pct) - 0.5 * pct)
#mutate(ylabel = paste(pct, '%', sep = '')) 이렇게 하면 소수점 전부 표시됨
df_top10
ggplot(df_top10, aes(x='', y=Freq, fill=rev)) +
geom_bar(width=1, stat='identity') +
coord_polar("y", start = 0) +
ggtitle("제주도 추천 여행코스 TOP 10") +
geom_text(aes(y=ypos, label=ylabel)), color = 'black')
ggplot(df_top10, aes(x='', y=Freq, fill=rev)) +
geom_bar(width=1, stat='identity') +
coord_polar("y", start = 0) +
ggtitle("제주도 추천 여행코스 TOP 10") +
geom_text(aes(y=ypos, label=ylabel)) color = 'black')
ggplot(df_top10, aes(x='', y=Freq, fill=rev)) +
geom_bar(width=1, stat='identity') +
coord_polar("y", start = 0) +
ggtitle("제주도 추천 여행코스 TOP 10") +
geom_text(aes(y=ypos, label=ylabel)) color = 'black')
ggplot(df_top10, aes(x='', y=Freq, fill=rev)) +
geom_bar(width=1, stat='identity') +
coord_polar("y", start = 0) +
ggtitle("제주도 추천 여행코스 TOP 10") +
geom_text(aes(y=ypos, label=ylabel)) + color = 'black')
ggplot(df_top10, aes(x='', y=Freq, fill=rev)) +
geom_bar(width=1, stat='identity') +
coord_polar("y", start = 0) +
ggtitle("제주도 추천 여행코스 TOP 10") +
geom_text(aes(y=ypos, label=ylabel)), color = 'black'
ggplot(df_top10, aes(x='', y=Freq, fill=rev)) +
geom_bar(width=1, stat='identity') +
coord_polar("y", start = 0) +
ggtitle("제주도 추천 여행코스 TOP 10") +
geom_text(aes(y=ypos, label=ylabel), color = 'black')
ggplot(df_top10, aes(x='', y=Freq, fill=rev)) +
geom_bar(width=1, stat='identity') +
ggtitle("제주도 추천 여행코스 TOP 10") +
geom_text(aes(y=ypos, label=ylabel), color = 'black')
df_top10
ggplot(df_top10, aes(x='', y=Freq, fill=rev)) +
geom_bar(width=1, stat='identity') +
coord_polar("y", start = 0) +
ggtitle("제주도 추천 여행코스 TOP 10") +
geom_text(aes(y=ypos, label=ylabel), color = 'black')
df_top10 <- df_top10 %>%
mutate(pct = Freq / sum(Freq) * 100) %>%
mutate(ylabel = paste(sprintf("%4.1f", pct), rev, '%', sep = '')) %>%
mutate(ypos = cumsum(pct) - 0.5 * pct)
ggplot(df_top10, aes(x='', y=Freq, fill=rev)) +
geom_bar(width=1, stat='identity') +
coord_polar("y", start = 0) +
ggtitle("제주도 추천 여행코스 TOP 10") +
geom_text(aes(y=ypos, label=ylabel), color = 'black')
df_top10 <- df_top10 %>%
mutate(pct = Freq / sum(Freq) * 100) %>%
mutate(ylabel = paste(rev, "\n", sprintf("%4.1f", pct), '%', sep = '')) %>%
mutate(ypos = cumsum(pct) - 0.5 * pct)
ggplot(df_top10, aes(x='', y=Freq, fill=rev)) +
geom_bar(width=1, stat='identity') +
coord_polar("y", start = 0) +
ggtitle("제주도 추천 여행코스 TOP 10") +
geom_text(aes(y=ypos, label=ylabel), color = 'black')
source('D:/Workspace/R-Lecture/Part2/Stage2_Graph/Ex01_Jeju/jeju.R', encoding = 'UTF-8', echo=TRUE)
library(extrafont)
library(extrafont)
install.packages('extrafont')
library(extrafont)
bchart <- head(sort(wordcount, decreasing=T),10)
bchart
bp <- barplot(bchart,  main = "제주도 추천 여행 코스 TOP 10 ", col = rainbow(10),
cex.names=0.7, las = 2,ylim=c(0,25))
pct <- round(bchart/sum(bchart) * 100 ,1)
pct
text(x = bp, y = bchart*1.05, labels = paste("(",pct,"%",")"), col = "black", cex = 0.7)
text(x = bp, y = bchart*0.95, labels = paste(bchart,"건"), col = "black", cex = 0.7)
barplot(bchart,main="제주도 추천 여행 코스 Top 10",col=rainbow(10),
xlim=c(0,25),cex.name=0.7,las=1,horiz=T)
barplot(bchart,main="제주도 추천 여행 코스 Top 10",col=rainbow(10),
xlim=c(0,25),cex.name=0.7,las=2,horiz=T)
barplot(bchart,main="제주도 추천 여행 코스 Top 10",col=rainbow(10),
xlim=c(0,25),cex.name=0.7,las=1,horiz=T)
text(y = bp, x = bchart*0.9, labels = paste(bchart,"건"), col = "black", cex = 0.7)
text(y = bp, x = bchart*1.15, labels = paste("(",pct,"%",")"), col = "black", cex = 0.7)
bp <- barplot(bchart,  main = "제주도 추천 여행 코스 TOP 10 ", col = rainbow(10),
cex.names=0.7, las = 2,ylim=c(0,25))
text(x = bp, y = bchart*1.05, labels = paste("(",pct,"%",")"), col = "black", cex = 0.7)
text(x = bp, y = bchart*0.95, labels = paste(bchart,"건"), col = "black", cex = 0.7)
bp <- barplot(bchart,  main = "제주도 추천 여행 코스 TOP 10 ", col = rainbow(10),
cex.names=0.7, las = 1,ylim=c(0,25))
bp <- barplot(bchart,  main = "제주도 추천 여행 코스 TOP 10 ", col = rainbow(10),
cex.names=0.7, las = 1, ylim=c(0,20))
text(x = bp, y = bchart*1.05, labels = paste("(",pct,"%",")"), col = "black", cex = 0.7)
install.packages("plotrix")
library(plotrix)
th_pct <- round(bchart/sum(bchart) * 100,1)
names(bchart)
th_names <- names(bchart)
paste(th_names,"\n","(",th_pct,")")
th_labels <- paste(th_names,"\n","(",th_pct,")")
pie3D(bchart,main="제주도 추천 여행 코스 Top 10",col=rainbow(10),
cex=0.3,labels=th_labels,explode=0.05)
th_labels <- paste(th_names,"\n","(",th_pct,")", "%")
pie3D(bchart,main="제주도 추천 여행 코스 Top 10",col=rainbow(10),
cex=0.3,labels=th_labels,explode=0.05)
th_labels <- paste(th_names,"\n","(",th_pct,")", "%", sep = '')
pie3D(bchart,main="제주도 추천 여행 코스 Top 10",col=rainbow(10),
cex=0.3,labels=th_labels,explode=0.05)
th_labels <- paste(th_names,"\n","(",th_pct,"%",")", sep = '')
pie3D(bchart,main="제주도 추천 여행 코스 Top 10",col=rainbow(10),
cex=0.3,labels=th_labels,explode=0.05)
pie3D(bchart,main="제주도 추천 여행 코스 Top 10",col=rainbow(10),
cex=1, labels=th_labels, explode=0.05)
pie3D(bchart,main="제주도 추천 여행 코스 Top 10",col=rainbow(10),
cex=0.3, labels=th_labels, explode=1)
pie3D(bchart,main="제주도 추천 여행 코스 Top 10",col=rainbow(10),
cex=0.3, labels=th_labels, explode=0.05)
pie3D(bchart,main="제주도 추천 여행 코스 Top 10",col=rainbow(10),
cex=1, labels=th_labels, explode=0.05)
pie3D(bchart,main="제주도 추천 여행 코스 Top 10",col=rainbow(10),
cex=0.3, labels=th_labels, explode=0.05)
library(KoNLP)
library("tm")
library(wordcloud)
library(RColorBrewer)
set("D:/Workspace/R-Lecture/Part2/Stage2_Graph/연습문제")
library(KoNLP)
library("tm")
library(wordcloud)
library(RColorBrewer)
data1 <- readLines("hiphop.txt")
set("D:/Workspace/R-Lecture/Part2/Stage2_Graph/연습문제")
setwd("D:/Workspace/R-Lecture/Part2/Stage2_Graph/연습문제")
data1 <- readLines("hiphop.txt")
data1
str(data1)
data2 <- sapply(data1, extractNoun, USE.NAMES = F)
data1 <- readLines("hiphop.txt")
data2 <- sapply(data1, extractNoun, USE.NAMES = F)
data2
head(data2, 30)
head(unlist(data2), 30)
data3 <- unlist(data2)
data3
wordcount <- table(data3)
head(sort(wordcount, decreasing = T), 50)
data3 <- filter(function(x) {nchar(x) >= 2}, data3)
library(stringr)
data3 <- filter(function(x) {nchar(x) >= 2}, data3)
head(sort(wordcount, decreasing = T), 50)
data3 <- filter(function(x) {nchar(x) >= 2}, data3)
library(dplyr)
data3 <- filter(function(x) {nchar(x) >= 2}, data3)
filter(function(x) {nchar(x) >= 2}, data3)
useSejongDic( )
data3 <- filter(function(x) {nchar(x) >= 2}, data3)
data3 <- Filter(function(x) {nchar(x) <= 2} ,data3)
data3
data3 <- unlist(data2)
data3 <- Filter(function(x) {nchar(x) >= 10} ,data3)
data3 <- Filter(function(x) {nchar(x) >= 2} ,data3)
data3
data3 <- unlist(data2)
data3
data3 <- Filter(function(x) {nchar(x) >= 2} ,data3)
data3
wordcount <- table(data3)
head(sort(wordcount, decreasing = T), 50)
head(sort(wordcount, decreasing = T), 100)
stopwords('en')
head(sort(wordcount, decreasing = T), 100)
head(sort(wordcount, decreasing = T), 150)
