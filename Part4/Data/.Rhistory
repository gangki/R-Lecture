g <- read.csv("군집분석.csv",head=T)
g
graph <- data.frame(학생=g$학생,교수=g$교수)
g<-graph.data.frame(graph,directed=T)
plot(g,layout=layout.fruchterman.reingold,vertex.size=2,edge.arrow.size=0.5,vertex.color="green",vertex.label=NA
g<-graph.data.frame(graph, directed=T)
plot(g,layout=layout.fruchterman.reingold,vertex.size=2,edge.arrow.size=0.5,vertex.color="green",vertex.label=NA
plot(g,layout=layout.fruchterman.reingold,vertex.size=2,edge.arrow.size=0.5, ,vertex.color="green",vertex.label=NA
g<-graph.data.frame(graph, directed=T)
plot(g,layout=layout.fruchterman.reingold,vertex.size=2,edge.arrow.size=0.5, ,vertex.color="green",vertex.label=NA
graph <- data.frame(학생=g$학생,교수=g$교수)
g <- read.csv("군집분석.csv",head=T)
graph <- data.frame(학생=g$학생,교수=g$교수)
g<-graph.data.frame(graph, directed=T)
library(devtools)
library(d3Network)
library(RCurl)
library(d3Network)
g<-graph.data.frame(graph, directed=T)
plot(g,layout=layout.fruchterman.reingold,vertex.size=2,edge.arrow.size=0.5, ,vertex.color="green",vertex.label=NA
g <- read.csv("군집분석.csv",head=T)
graph <- data.frame(학생=g$학생,교수=g$교수)
g<-graph.data.frame(graph, directed=T)
library(igraph)
g<-graph.data.frame(graph, directed=T)
plot(g,layout=layout.fruchterman.reingold,vertex.size=2,edge.arrow.size=0.5, ,vertex.color="green",vertex.label=NA
plot(g,layout=layout.fruchterman.reingold,vertex.size=2,edge.arrow.size=0.5, ,vertex.color="green",vertex.label=NA)
plot(g,layout=layout.fruchterman.reingold,vertex.size=2,edge.arrow.size=0.5, ,vertex.color="green",vertex.label=NA)
plot(g,layout=layout.kamada.kawai,vertex.size=2,edge.arrow.size=0.5, vertex.label=NA)
V(g)$name
gubun1 <- V(g)$name
gubun1 <- V(g)$name
gubun1
library(stringr)
gubun <- str_sub(gubun1, start=1, end1)
gubun <- str_sub(gubun1, start=1, end=1)
gubun
colors <- c()
for (i in 1:length(gubun)) {}
sizes <- c()
for (i in 1:length(gubun)) {
if (gubun[i] == 'S') {
colors <- c(colors, 'red')
sizes <- c(sizes, 2)
} else {
colors <- c(color, 'green')
sizes <- c(sizes, 6)
}
}
sizes <- c()
for ( i in 1:length(gubun)) {
if (gubun[i] == 'S' ) {
sizes <- c(sizes,2) }
else {
sizes <- c(sizes,6) }
}
> plot(g,layout=layout.fruchterman.reingold,vertex.size=sizes,edge.arrow.size=0.5,
,vertex.color=colors)
> plot(g,layout=layout.fruchterman.reingold,vertex.size=sizes,edge.arrow.size=0.5,vertex.color=colors)
plot(g,layout=layout.fruchterman.reingold,vertex.size=sizes,edge.arrow.size=0.5,vertex.color=colors)
sizes <- c()
for ( i in 1:length(gubun)) {
if (gubun[i] == 'S' ) {
sizes <- c(sizes,2) }
else {
sizes <- c(sizes,6) }
}
plot(g,layout=layout.fruchterman.reingold,vertex.size=sizes,edge.arrow.size=0.5,vertex.color=colors)
plot(g,layout=layout.fruchterman.reingold,vertex.size=sizes,edge.arrow.size=0.5,vertex.color=colors)
plot(g,layout=layout.fruchterman.reingold,vertex.size=2,edge.arrow.size=0.5, ,vertex.color="green",vertex.label=NA)
plot(g,layout=layout.fruchterman.reingold,vertex.size=sizes,edge.arrow.size=0.5,vertex.color=colors)
sizes <- c()
for ( i in 1:length(gubun)) {
if (gubun[i] == 'S' ) {
colors <- c(colors,"red")
sizes <- c(sizes,2) }
else {
colors <- c(colors,"green")
sizes <- c(sizes,6) }
}
plot(g,layout=layout.fruchterman.reingold,vertex.size=sizes,edge.arrow.size=0.5,vertex.color=colors)
plot(g,layout=layout.kamada.kawai,vertex.size=2,edge.arrow.size=0.5, vertex.label=NA)
3SimpleNetwork(emp,width=600,height=600,file="D:/Workspace/R-Lecture/Part4/Graph/Rplot.html")
SimpleNetwork(emp,width=600,height=600,file="D:/Workspace/R-Lecture/Part4/Graph/Rplot.html")
d3SimpleNetwork(emp,width=600,height=600,file="D:/Workspace/R-Lecture/Part4/Graph/Rplot.html")
d3SimpleNetwork(emp,width=600,height=600,file="D:/Workspace/R-Lecture/Part4/Graph/Rplot.png")
png("Graph/Rplot.png", width = 600, height = 600)
dev.off()
png("Graph/Rplot.png", width = 600, height = 600)
plot(g,layout=layout.fruchterman.reingold,vertex.size=sizes,edge.arrow.size=0.5,vertex.color=colors)
V(g)$name
gubun1 <- V(g)$name
gubun1
library(stringr)
gubun <- str_sub(gubun1, start=1, end=1)
gubun
colors <- c()
for ( i in 1:length(gubun)) {
if (gubun[i] == 'S' ) {
colors <- c(colors,"red") }
else {
colors <- c(colors,"green") }
}
sizes <- c()
for ( i in 1:length(gubun)) {
if (gubun[i] == 'S' ) {
sizes <- c(sizes,2) }
else {
sizes <- c(sizes,6) }
}
> plot(g,layout=layout.fruchterman.reingold,vertex.size=sizes,edge.arrow.size=0.5, ,vertex.color=colors)
sizes <- c()
for ( i in 1:length(gubun)) {
if (gubun[i] == 'S' ) {
sizes <- c(sizes,2) }
else {
sizes <- c(sizes,6) }
}
plot(g,layout=layout.fruchterman.reingold,vertex.size=sizes,edge.arrow.size=0.5, ,vertex.color=colors)
plot(g,layout=layout.fruchterman.reingold,vertex.size=sizes,edge.arrow.size=0.5, ,vertex.color=colors,vertex.label=NA)
plot(g,layout=layout.fruchterman.reingold,vertex.size=sizes,edge.arrow.size=0, ,vertex.color=colors,vertex.label=NA)
plot(g,layout=layout.kamada.kawai,vertex.size=sizes,edge.arrow.size=0, ,vertex.color=colors,vertex.label=NA)
shapes <- c()
for ( i in 1:length(gubun)) {
if (gubun[i] == 'S' ) {
shapes <- c(shapes,"circle") }
else {
shapes <- c(shapes,"square") }
}
plot(g,layout=layout.kamada.kawai,vertex.size=sizes,edge.arrow.size=0, ,vertex.color=colors,vertex.label=NA,vertex.shape=shapes)
png("군집_색상크기조절_5.png", width = 600, height = 600)
png("Graph/군집_색상크기조절_5.png", width = 600, height = 600)
savePlot("군집_색상크기조절_5.png",type="png")
plot(g,layout=layout.kamada.kawai,vertex.size=sizes,edge.arrow.size=0, ,vertex.color=colors,vertex.label=NA,vertex.shape=shapes)
install.packages("devtools")
install.packages("devtools")
> library(devtools)
library(devtools)
virus1 <- read.csv("메르스전염현황.csv",header=T)
d3SimpleNetwork(virus1,width=600,height=600,file="c:\\r_temp\\mers.html")
d3SimpleNetwork(virus1,width=600,height=600,file="D:\Workspace\R-Lecture\Part4\Graph\mers.html")
d3SimpleNetwork(virus1,width=600,height=600,file="D:/Workspace/R-Lecture/Part4/Graph/mers.html")
virus1
# Treemap
install.packages('treemap')
library(treemap)
total <- read.csv("학생시험결과_전체점수.csv", header = T, sep = ",")
total
treemap(total, vSize="점수", index=c("점수","이름름"))
treemap(total, vSize="점수", index=c("점수","이름"))
treemap(total, vSize="점수", index=c("점수","이름"))
library(treemap)
total <- read.csv("학생시험결과_전체점수.csv", header = T, sep = ",")
total
treemap(total, vSize="점수", index=c("점수","이름"))
treemap(total, vSize="점수", index=c("점수","이름"))
# Treemap
install.packages('treemap')
library(treemap)
total <- read.csv("학생시험결과_전체점수.csv", header = T, sep = ",")
total
treemap(total, vSize="점수", index=c("점수","이름"))
treemap(total, vSize="점수", index=c("조조","이름"))
treemap(total, vSize="점수", index=c("조","이름"))
treemap(total, vSize="점수", index=c("점수", "조","이름"))
treemap(total, vSize="점수", index=c("점수","이름"))
treemap(total, vSize="점수", index=c("조","이름"))
treemap(total, vSize="점수", index=c("점수", "조","이름"))
#stars
total <- read.csv("학생시험결과_전체점수.csv",header=T,sep=",")
total
row.names(total) <- total$이름
total
#stars
total <- read.table("학생별전체성적_new.txt",header=T,sep=",")
total
row.names(total) <- total$이름
total
row.names(total) <- total$이름
total <- total[,2:7]
total
stars(total,flip.labels=FALSE,draw.segment=FALSE,frame.plot=TRUE,full=TRUE, main="학생별 과목별 성적분석-STAR Chart" )
stars(total,flip.labels=FALSE,draw.segment=FALSE,frame.plot=TRUE,full=TRUE, main="학생별 과목별 성적분석-STAR Chart")
lab <- names(total)
lab
value <- table(lab)
value
value
pie(value,labels=lab,radius=0.1,cex=0.6,col=NA)
stars(total,flip.labels=FALSE,draw.segment=TRUE,frame.plot=TRUE,full=TRUE, main="학생별 과목별 성적분석-나이팅게일 챠트" )
label <- names(total)
label
value <- table(label)
color <- c("black","red","green","blue","cyan","violet")
pie(value,labels=label,col=color,radius=0.1,cex=0.6)
class(label)
class(value)
class(color)
class(pie)
stars(total,flip.labels=FALSE,draw.segment=TRUE,frame.plot=TRUE,full=FALSE, main="학생별 과목별 분석 다이어그램-반원챠트" )16
stars(total,flip.labels=FALSE,draw.segment=TRUE,frame.plot=TRUE,full=FALSE, main="학생별 과목별 분석 다이어그램-반원챠트")
install.packages("fmsb")
library(fmsb)
layout <- data.frame(분석력=c(5,1), 창의력=c(15,3), 판단력=c(3,0), 리더쉽=c(5,1), 사교성=c(5,1))
set.seed(123) # 임의의 데이터 생성
data1 <- data.frame(분석력=runif(3,1,5), 창의력=rnorm(3,10,2), 판단력=c(0.5,NA,3), 리더쉽=runif(3,1,5), 사교성=c(5,2.5,4))
data2 <- rbind(layout,data1)
layout
data1 <- data.frame(분석력=runif(3,1,5), 창의력=rnorm(3,10,2), 판단력=c(0.5,NA,3), 리더쉽=runif(3,1,5), 사교성=c(5,2.5,4))
data2 <- rbind(layout,data1)
op <- par(mar=c(1,0.5,3,1),mfrow=c(2,2)) # 여백과 배치를 조정합니다
radarchart(data2,axistype=1,seg=5,plty=1,title="첫번째 타입")
radarchart(data2,axistype=2,pcol=topo.colors(3),plty=1,title="두번째 타입")
radarchart(data2,axistype=3,pty=32,plty=1,axislabcol="grey",na.itp=FALSE, title="세번째 타입)")
radarchart(data2,axistype=0,plwd=1:5,pcol=1,title="네번째 타입")
data1
runif(10)
runif(10, 2, 5)
runif(10, 2, 5)
runif(10, 2, 5)
rnorm(10)
rnorm(10, 5, 2)
par(mar=c(0,0,0,0),mfrow=c(1,1))
par(mar=c(0,0,0,0),mfrow=c(1,1))
segments(2,2,3,3)
#저수준 작도 함수
segments(2,2,3,3)
#저수준 작도 함수
var1 < 1:5
#저수준 작도 함수
var1 <- 1:5
Plot(var1)
segments(2,2,3,3)
plot(var1)
segments(2,2,3,3)
arrows(5,5,7,7)
arrows(5,5,4,4)
text(2,4,'labels')
plot(var1)
segments(2,2,3,3)
arrows(5,5,4,4)
text(2,4,'labels')
text(3,2,'테스트',srt=45)
plot(1:15)
rect(1,6,3,8)  # 사각형 그리기
arrows(1,1,5,5) # 화살표 그리기
text(8,9,"TEXT")  # 글자 쓰기
title("THIS IS TEST","SUB") # 제목 표시하기
plot(1:15)
abline(h=8)  # 선 긋기
rect(1,6,3,8)  # 사각형 그리기
arrows(1,1,5,5) # 화살표 그리기
text(8,9,"TEXT")  # 글자 쓰기
title("THIS IS TEST","SUB") # 제목 표시하기
plot(1:15)
abline(h=8)  # 선 긋기
rect(1,6,3,8)  # 사각형 그리기
arrows(1,1,5,5) # 화살표 그리기
text(8,9,"TEXT")  # 글자 쓰기
title("THIS IS TEST","SUB") # 제목 표시하기
iris
View(iris)
setosa <- iris[50,1]
setosa
iris[50,1]
iris3
iris
summary(iris)
iris
fix(iris)
edit(iris)
head(iris)
head(iris, 10)
tail(iris, 10)
summary(iris)
class(iris)
class(iris)
str(iris)
levels(iris$Species)
summary(iris)
plot(iris, aes(Sepal.Length, Sepal.Width))
setosa_sepal <- subset(iris, species == "setosa" )
setosa_sepal <- subset(iris, Species == "setosa" )
setosa_sepal
setosa_sepal <- subset(iris, Species == "setosa", select = c(Sepal.Length, Sepal.Width))
setosa_sepal
setosa_Sepal <- subset(iris, Species == "setosa")
setosa_Sepal <- subset(iris, Species == "setosa", select = c(Sepal.Length, Sepal.Width))
setosa_Petal <- subset(iris, Species == "setosa", select = c(Petal.Length, Petal.Width))
setosa_Petal
iris
summary(iris)
setosa <- subset(iris, Species == "setosa")
setosa
versicolor <- subset(iris, Species == "versicolor")
versicolor
versicolor_Sepal <- subset(iris, Species == "versicolor", select = c(Sepal.Length, Sepal.Width))
versicolor_Petal <- subset(iris, Species == "versicolor", select = c(Petal.Length, Petal.Width))
versicolor_Sepal
versicolor
summary(iris)
virginica <- subset(iris, Species == "virginica")
virginica
virginica_Sepal <- subset(iris, Species == "virginica", select = c(Sepal.Length, Sepal.Width))
virginica_Petal <- subset(iris, Species == "virginica", select = c(Petal.Length, Petal.Width))
plot(setosa_Sepal, setosa_Petal)
setosa_Sepal
plot(setosa_Sepal)
plot(setosa_Pepal)
plot(setosa_Petal)
plot(versicolor_Sepal)
plot(versicolor_Peta)
plot(versicolor_Petal)
plot(virginica_Sepal)
plot(virginica_Petal)
plot(setosa_Sepal, main="setosa_Sepal")
plot(setosa_Petal, main="setosa_Petal")
plot(versicolor_Sepal, main="versicolor_Sepal")
plot(versicolor_Petal, main="versicolor_Petal")
plot(virginica_Sepal, main="virginica_Sepal")
plot(virginica_Petal, main="virginica_Sepal")
plot(setosa_Sepal, main="setosa_Sepal")
plot(setosa_Petal, main="setosa_Petal")
plot(versicolor_Sepal, main="versicolor_Sepal")
plot(versicolor_Petal, main="versicolor_Petal")
plot(virginica_Sepal, main="virginica_Sepal")
plot(virginica_Petal, main="virginica_Sepal")
summary(iris)
plot(setosa_Sepal, xlim=c(1,10), ylim=c(1,5), main="setosa_Sepal")
plot(setosa_Sepal, xlim=c(1,8), ylim=c(1,5), main="setosa_Sepal")
plot(setosa_Sepal, main="setosa_Sepal")
par_1 <- par(mfrow=c(3,1))
par(par_1)
plot(setosa_Sepal, main="setosa_Sepal")
plot(setosa_Petal, main="setosa_Petal")
plot(versicolor_Sepal, main="versicolor_Sepal")
par(mfrow=c(3,2))
plot(setosa_Sepal, main="setosa_Sepal")
plot(setosa_Petal, main="setosa_Petal")
plot(versicolor_Sepal, main="versicolor_Sepal")
plot(versicolor_Petal, main="versicolor_Petal")
plot(virginica_Sepal, main="virginica_Sepal")
plot(virginica_Petal, main="virginica_Sepal")
op <- par(mar=c(1,0.5,3,1),mfrow=c(2,2)) # 여백과 배치를 조정합니다
radarchart(data2,axistype=1,seg=5,plty=1,title="첫번째 타입")
radarchart(data2,axistype=2,pcol=topo.colors(3),plty=1,title="두번째 타입")
radarchart(data2,axistype=3,pty=32,plty=1,axislabcol="grey",na.itp=FALSE, title="세번째 타입)")
radarchart(data2,axistype=0,plwd=1:5,pcol=1,title="네번째 타입")
par(op)
radarchart(data2,axistype=0,plwd=1:5,pcol=1,title="네번째 타입")
radarchart(data2,axistype=3,pty=32,plty=1,axislabcol="grey",na.itp=FALSE, title="세번째 타입)")
radarchart(data2,axistype=2,pcol=topo.colors(3),plty=1,title="두번째 타입")
par_1 <- par(mar=c(1,0.5,3,1),mfrow=c(3,2))
plot(setosa_Sepal, main="setosa_Sepal")
plot(setosa_Petal, main="setosa_Petal")
plot(versicolor_Sepal, main="versicolor_Sepal")
plot(versicolor_Petal, main="versicolor_Petal")
plot(virginica_Sepal, main="virginica_Sepal")
plot(virginica_Petal, main="virginica_Sepal")
par_1 <- par(mar=c(1,1,1,1),mfrow=c(3,2))
plot(setosa_Sepal, main="setosa_Sepal")
plot(setosa_Petal, main="setosa_Petal")
plot(versicolor_Sepal, main="versicolor_Sepal")
plot(versicolor_Petal, main="versicolor_Petal")
plot(virginica_Sepal, main="virginica_Sepal")
plot(virginica_Petal, main="virginica_Sepal")
par_1 <- par(mfrow=c(3,2))
plot(setosa_Sepal, main="setosa_Sepal")
plot(setosa_Petal, main="setosa_Petal")
plot(versicolor_Sepal, main="versicolor_Sepal")
plot(versicolor_Petal, main="versicolor_Petal")
plot(virginica_Sepal, main="virginica_Sepal")
plot(virginica_Petal, main="virginica_Sepal")
par(mfrow=c(3,2))
plot(setosa_Sepal, main="setosa_Sepal")
plot(setosa_Petal, main="setosa_Petal")
plot(versicolor_Sepal, main="versicolor_Sepal")
plot(versicolor_Petal, main="versicolor_Petal")
plot(virginica_Sepal, main="virginica_Sepal")
plot(virginica_Petal, main="virginica_Sepal")
par(mar=c(0,0,0,0),mfrow=c(1,1))
plot(setosa_Sepal, main="setosa_Sepal")
plot(setosa_Petal, main="setosa_Petal")
par(mar=c(0,0,0),mfrow=c(1,1))
par(mar=c(0,0,0,0),mfrow=c(1,1))
plot(setosa_Sepal, main="setosa_Sepal")
plot(setosa_Petal, main="setosa_Petal")
par(mfrow=c(3,2))
plot(setosa_Sepal, main="setosa_Sepal")
plot(setosa_Petal, main="setosa_Petal")
plot(versicolor_Sepal, main="versicolor_Sepal")
plot(versicolor_Petal, main="versicolor_Petal")
plot(virginica_Sepal, main="virginica_Sepal")
plot(virginica_Petal, main="virginica_Sepal")
par(mar=c(1,1,1,1),mfrow=c(3,2))
plot(setosa_Sepal, main="setosa_Sepal")
plot(setosa_Petal, main="setosa_Petal")
plot(versicolor_Sepal, main="versicolor_Sepal")
plot(versicolor_Petal, main="versicolor_Petal")
plot(virginica_Sepal, main="virginica_Sepal")
plot(virginica_Petal, main="virginica_Sepal")
summary(iris)
setosa_Sepal
setosa <- subset(iris, Species == "setosa")
setosa
# 문제 2번
setosa_mean <- (setosa$Sepal.Length, setosa$Sepal.Width)
# 문제 2번
setosa_mean <- mean(setosa$Sepal.Length, setosa$Sepal.Width)
class(iris)
# 문제 2번
apply(setosa, 2, mean)
setosa
setosa
apply(setosa, 2, mean)
class(setosa)
setosa
# 문제 2번
setosa <- subset(iris, Species == "setosa", -5)
setosa
apply(setosa, 2, mean)
setosa_mean <- apply(setosa, 2, mean)
setosa_mean
versicolor <- subset(iris, Species == "versicolor", -5)
versicolor_mean <- apply(versicolor, 2, mean)
versicolor_mean
virginica <- subset(iris, Species == "virginica", -5)
virginica_mean <- apply(virginica, 2, mean)
virginica_mean
class(setosa)
barplot(setosa)
as.vector(setosa_mean) <- apply(setosa, 2, mean)
rbind(setosa, versicolor)
rbind(setosa_mean, versicolor_mean)
rbind(setosa_mean, versicolor_mean, virginica_mean)
iris_mena <- rbind(setosa_mean, versicolor_mean, virginica_mean)
iris_mena
iris_mean <- rbind(setosa_mean, versicolor_mean, virginica_mean)
barplot(as.matrix(iris_mean))
par(mar=c(1,1,1,1),mfrow=c(1,2))
barplot(as.matrix(iris_mean))
