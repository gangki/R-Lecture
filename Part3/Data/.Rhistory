mpg %>%
group_by(manufacturer) %>%
summarise(average = mean(hwy)) %>%
arrange(desc(average),head = 3)
mpg %>%
group_by(manufacturer) %>%
summarise(average = mean(hwy)) %>%
arrange(desc(average))
mpg %>%
group_by(manufacturer) %>%
filter(class == compact) %>%
summarise() %>%
arrange(desc(average))
mpg %>%
group_by(manufacturer) %>%
filter(class == 'compact') %>%
summarise() %>%
arrange(desc(average))
mpg %>%
group_by(manufacturer) %>%
filter(class == 'compact') %>%
mpg %>%
group_by(manufacturer) %>%
filter(class == 'compact') %>%
mpg %>%
group_by(manufacturer) %>%
filter(class == 'compact')
mpg %>%
group_by(manufacturer) %>%
filter(class == compact)
mpg %>%
group_by(manufacturer) %>%
filter(class == compact)
mpg %>%
group_by(manufacturer) %>%
filter(class == 'compact')
mpg %>%
group_by(manufacturer) %>%
#filter(class == 'compact')
summarise(sum = sum(compact))
mpg %>%
group_by(manufacturer) %>%
#filter(class == 'compact')
summarise(sum = sum(class))
mpg %>%
group_by(manufacturer) %>%
#filter(class == 'compact')
summarise(sum = sum(class), n())
mpg %>%
group_by(manufacturer) %>%
#filter(class == 'compact')
summarise(sum = sum(class, n()))
mpg %>%
group_by(manufacturer) %>%
#filter(class == 'compact')
summarise(sum = sum(class), n())
mpg %>%
group_by(manufacturer) %>%
#filter(class == 'compact')
summarise_each(list(sum, n()), class)
mpg %>%
group_by(manufacturer) %>%
#filter(class == 'compact')
summarise(sum = as.numeric(sum(class)))
mpg %>%
group_by(manufacturer)
mpg %>%
group_by(manufacturer) %>%
filter(class == 'compact')
mpg %>%
group_by(manufacturer, model) %>%
filter(class == 'compact')
mpg %>%
filter(class == 'compact')
group_by(manufacturer, model) %>%
group_by(manufacturer, model) %>%
?summarise()
group_by(manufacturer, model) %>%
?summarise()
?summarise()
group_by(manufacturer, model) %>%
summarise(n_distinct(model))
mpg %>%
filter(class == 'compact')
group_by(manufacturer, model) %>%
summarise(n_distinct(model))
mpg %>%
filter(class == 'compact')
group_by(manufacturer, model) %>%
group_by(manufacturer, model) %>%
summarise(n_distinct(model))
group_by(manufacturer) %>%
summarise(n_distinct(model))
mpg %>%
filter(class == 'compact')
group_by(manufacturer) %>%
summarise(n_distinct(model))
mpg %>%
filter(class == 'compact')
mpg %>%
filter(class == 'compact')
group_by(manufacturer) %>%
group_by(manufacturer) %>%
summarise(n(model))
group_by(manufacturer) %>%
summarise(n(model))
head(5)
mpg %>%
group_by(manufacturer) %>%
summarise(average = mean(hwy)) %>%
arrange(desc(average))
head(5)
mpg %>%
group_by(manufacturer) %>%
summarise(average = mean(hwy)) %>%
arrange(desc(average)) %>%
head(5)
mpg_copy %>%
group_by(model) %>%
summarise(average = mean(평균연비)) %>%
arrange(desc(average)) %>%
head(3)
mpg %>%
filter(manufacturer == 'audi') %>%
arrange(desc(hwy)) %>%
head(5)
group_by(manufacturer) %>%
summarise(count = n())
mpg %>%
filter(class == 'compact')
group_by(manufacturer) %>%
summarise(count = n())
mpg %>%
group_by(manufacturer) %>%
filter(class == 'compact') %>%
summarise(count = n())
mpg %>%
group_by(manufacturer) %>%
filter(class == 'compact') %>%
summarise(count = n()) %>%
arrange(desc(count))
mpg %>%
filter(displ <= 4) %>%
summarise(average = mean(hwy, na.rm = T))
mpg %>%
filter(displ >= 5) %>%
summarise(average = mean(hwy, na.rm = T))
mpg4 <- filter(mpg, displ <= 4)
mpg4 <- filter(mpg, displ <= 4); mpg4
mpg4 <- filter(mpg, displ <= 4); mpg4
mean(mpg4$hwy); mean(mpg5$hwy);
mpg4 <- filter(mpg, displ <= 4);
mpg5 <- filter(mpg, displ >= 5);
mean(mpg4$hwy); mean(mpg5$hwy);
mpg %>%
group_by(manufacturer) %>%
summarise(average = mean(cty, na.rm = T))
mean(mpg_a$cty); mean(mpg_t$cty)
mpg_a <- filter(mpg, manufacturer == 'audi')
mpg_t <- filter(mpg, manufacturer == 'toyota')
mean(mpg_a$cty); mean(mpg_t$cty)
mpg %>%
group_by(manufacturer) %>%
summarise(average = mean(cty, na.rm = T))
mpg %>%
group_by(manufacturer) %>%
summarise(average = mean(cty, na.rm = T)) %>%
filter(manufacturer = c('audi', 'toyota'))
mpg %>%
group_by(manufacturer) %>%
summarise(average = mean(cty, na.rm = T)) %>%
filter(manufacturer == c('audi', 'toyota'))
mpg %>%
group_by(manufacturer) %>%
summarise(average = mean(cty, na.rm = T)) %>%
filter(manufacturer == c('audi', 'toyota'))
class_cty <- mpg %>%
select(class, cty)
class_cty %>%
filter(class == 'compact')
mpg %>%
group_by(manufacturer) %>%
summarise(average = mean(cty)) %>%
filter(manufacturer == c('audi', 'toyota'))
class_cty %>%
filter(class == c('suv', 'compact')) %>%
group_by(class) %>%
summarise(average = mean(cty))
mpg %>%
filter(manufacturer == 'audi') %>%
arrange(desc(hwy)) %>%
head(5)
mpg %>%
filter(manufacturer == 'audi') %>%
arrange(desc(hwy)) %>%
head(1,3)
mpg %>%
filter(manufacturer == 'audi') %>%
arrange(desc(hwy)) %>%
head(1,3)
mpg %>%
filter(manufacturer == 'audi') %>%
arrange(desc(hwy)) %>%
head(5)
mpg_copy %>%
mutate(합산연비 = cty + hwy,평균연비 = 합산연비 / 2)%>%
arrange(desc(average)) %>%
head(3)
mpg_copy %>%
mutate(합산연비 = cty + hwy,평균연비 = 합산연비 / 2)%>%
summarise(average = mean(평균연비)) %>%
arrange(desc(average)) %>%
head(3)
mpg_copy %>%
mutate(합산연비 = cty + hwy,평균연비 = 합산연비 / 2)%>%
summarise(average = mean(평균연비)) %>%
arrange(desc(average)) %>%
head(3)
mpg_copy %>%
mutate(합산연비 = cty + hwy,평균연비 = 합산연비 / 2)%>%
group_by(model) %>%
summarise(average = mean(평균연비)) %>%
arrange(desc(average)) %>%
head(3)
mpg %>%
group_by(manufacturer) %>%
summarise(average = mean(hwy)) %>%
arrange(desc(average)) %>%
head(3)
mpg %>%
group_by(manufacturer) %>%
filter(class == 'compact') %>%
summarise(count = n()) %>%
arrange(desc(count))
install.packages('reshpape2')
install.packages('reshape2')
library(reshape2)
fruits
Fruits
melt(Fruits, id='Year')
fruits
melt(Fruits, id='Year', 'Fruit')
melt(Fruits, id=c('Year', 'Fruit'))
library(reshape2)
library('reshape2')
attach(fruits)
library(googleVis)
fruits
attach(fruits)
library(googleVis)
attach(fruits)
install.packages('reshape2')
install.packages("reshape2")
library(reshape2)
fruits
library("reshape2")
fruits
install.packages('stringr')
install.packages("stringr")
library(stringr)
fruit
fruits
str_detect(fruits, 'A')
fruits <- c('apple', 'Apple', 'banana', 'pineapple')
str_detect(fruits, 'A')
str_detect(fruits, 'a')
str_detect(fruits, '^a')
str_detect(fruits, '^a') # ^:단어의 처음, $:단어의 끝
str_detect(fruits, 'e$')
str_detect(fruits, '^[aA]')
str_detect(fruits, '[aA]')
str_detect(fruits.ignore.case('a'))
str_detect(fruits,ignore.case('a'))
str_detect(fruits,ignore.case())
str_detect('a', ignore.case('a'))
str_detect(fruits, regex('a', ignore_case = T)
str_detect(fruits, regex('a', ignore_case = T))
str_detect(fruits, regex('a', ignore_case = T)
fruits <- c('apple', 'Apple', 'banana', 'pineapple')
str_detect(fruits, regex('a', ignore_case = T)
str_detect(fruits, regex('a', ignore_case = T))
str_detect(fruits, '[aA]')
str_detect(fruits, regex('a', ignore_case = T))
fruits
str_count(fruit, 'a')
str_count(fruits, 'a')
str_c("apple","banana")
str_c("Fruits:", fruits)
str_c(fruits, "name is", fruits)
str_c(fruits, " name is ", fruits)
str_c(fruits, collapse="")
str_c(fruits, collapse=",")
str_c(fruits, collapse=", ")
str_dup(fruits,3)
str_length('과일')
str_locate('apple', 'a')
str_locate(fruits, 'a')
str_locate('apple', 'app')
str_replace('apple','p','*')
str_replace('apple','p','++')
str_replace all('apple','p','*')
str_replace_all('apple','p','*')
fruits <- str_c('apple','/','orange','/','banana')
fruits
str_split(fruits, '/')
str sub(fruits,start=1, end=3)
str_sub(fruits, start=1, end=3)
str_sub(fruits,start=6, end=9)
str_sub(fruits, start=6, end=9)
str_sub(fruits, start=-5)
str_trim(' apple banana berry ')
str_trim('\t apple banana berry ')
str_sub(fruits, start=7)
str_trim('\t apple banana berry \n  apple banana berry  ')
str_trim('\t apple banana berry \n')
while (T) {
for (i in 1:4) {
line <- ''
if (i != 4) {
for (k in 1:(3 - (i - 1)))
line <- str_c(line, ' ')
}
for (k in 1:(2*i - 1))
line <- str_c(line, '#')
print(line)
}
for (i in 3:1) {
line <- ''
for (k in 1:(3 - (i - 1)))
line <- str_c(line, ' ')
for (k in 1:(2*i - 1))
line <- str_c(line, '#')
print(line)
}
break;
}
while (T) {
for (i in 1:4) {
line <- ''
if (i != 4) {
for (k in 1:(3 - (i - 1)))
line <- str_c(line, ' ')
}
for (k in 1:(2*i - 1))
line <- str_c(line, '#')
print(line)
}
for (i in 3:1) {
line <- ''
for (k in 1:(3 - (i - 1)))
line <- str_c(line, ' ')
for (k in 1:(2*i - 1))
line <- str_c(line, '#')
print(line)
}
break;
}
getDenominator <- function(x) {
den <- c(1)
if (x >= 2) {
for (i in 2:x) {
if (x %% i == 0)
den <- c(den, i)
}
}
return(den)
}
getDenominator(60)
getDenominator(1)
getDenominator(2)
getDenominator(3)
#데이터 확인
iris
plot(setosa_Sepal, main="setosa_Sepal")
setosa <- subset(iris, Species == "setosa")
setosa_Sepal <- subset(iris, Species == "setosa", select = c(Sepal.Length, Sepal.Width))
setosa_Petal <- subset(iris, Species == "setosa", select = c(Petal.Length, Petal.Width))
versicolor <- subset(iris, Species == "versicolor")
versicolor_Sepal <- subset(iris, Species == "versicolor", select = c(Sepal.Length, Sepal.Width))
versicolor_Petal <- subset(iris, Species == "versicolor", select = c(Petal.Length, Petal.Width))
virginica <- subset(iris, Species == "virginica")
virginica_Sepal <- subset(iris, Species == "virginica", select = c(Sepal.Length, Sepal.Width))
virginica_Petal <- subset(iris, Species == "virginica", select = c(Petal.Length, Petal.Width))
plot(setosa_Sepal, main="setosa_Sepal")
plot(setosa_Petal, main="setosa_Petal")
plot(versicolor_Sepal, main="versicolor_Sepal")
plot(versicolor_Petal, main="versicolor_Petal")
plot(virginica_Sepal, main="virginica_Sepal")
plot(virginica_Petal, main="virginica_Sepal")
# 문제 2번
setosa <- subset(iris, Species == "setosa", -5)
setosa_mean <- apply(setosa, 2, mean)
versicolor <- subset(iris, Species == "versicolor", -5)
versicolor_mean <- apply(versicolor, 2, mean)
virginica <- subset(iris, Species == "virginica", -5)
virginica_mean <- apply(virginica, 2, mean)
iris_mean <- rbind(setosa_mean, versicolor_mean, virginica_mean)
iris_mean_t <- t(iris_mean)
barplot(as.matrix(iris_mean_t), beside=T)
barplot(as.matrix(iris_mean_t))
boxplot(setosa$Sepal.Length)
boxplot(setosa$Sepal.Width)
boxplot(setosa$Petal.Length)
boxplot(setosa$Petal.Width)
boxplot(versicolor$Sepal.Length)
boxplot(versicolor$Sepal.Width)
boxplot(versicolor$Petal.Length)
boxplot(versicolor$Petal.Width)
boxplot(virginica$Sepal.Length)
boxplot(virginica$Sepal.Width)
boxplot(virginica$Petal.Length)
boxplot(virginica$Petal.Width)
setosa
setosa_Sepal
plot(setosa_Sepal, main="setosa_Sepal")
plot(setosa_Petal, main="setosa_Petal")
plot(versicolor_Sepal, main="versicolor_Sepal")
plot(versicolor_Petal, main="versicolor_Petal")
plot(virginica_Sepal, main="virginica_Sepal")
plot(virginica_Petal, main="virginica_Sepal")
par("mar")
mfrow
par(mfrow=(3,2))
par(mfrow=c(3,2))
par(mfrow=c(3,2))
plot(setosa_Sepal, main="setosa_Sepal")
plot(setosa_Petal, main="setosa_Petal")
plot(versicolor_Sepal, main="versicolor_Sepal")
plot(versicolor_Petal, main="versicolor_Petal")
plot(virginica_Sepal, main="virginica_Sepal")
plot(virginica_Petal, main="virginica_Sepal")
png("Graph/iris_length_width.png", width = 600, height = 600)
savePlot("iris_length_width.png",type="png")
dev.off()
plot(setosa_Sepal, main="setosa_Sepal")
plot(setosa_Petal, main="setosa_Petal")
par(mfrow=c(3,2))
plot(setosa_Sepal, main="setosa_Sepal")
plot(setosa_Petal, main="setosa_Petal")
plot(versicolor_Sepal, main="versicolor_Sepal")
plot(versicolor_Petal, main="versicolor_Petal")
plot(virginica_Sepal, main="virginica_Sepal")
plot(virginica_Petal, main="virginica_Sepal")
png("Graph/iris_length_width.png", width = 600, height = 600)
png("D:/Workspace/R-Lecture/Part4/Graph/iris_length_width.png", width = 600, height = 600)
par(mfrow=c(3,2))
plot(setosa_Sepal, main="setosa_Sepal")
plot(setosa_Petal, main="setosa_Petal")
plot(versicolor_Sepal, main="versicolor_Sepal")
plot(versicolor_Petal, main="versicolor_Petal")
plot(virginica_Sepal, main="virginica_Sepal")
plot(virginica_Petal, main="virginica_Sepal")
dev.off()
png("D:/Workspace/R-Lecture/Part4/Graph/iris_length_width.png", width = 1200, height = 1200)
par(mfrow=c(3,2))
plot(setosa_Sepal, main="setosa_Sepal")
plot(setosa_Petal, main="setosa_Petal")
plot(versicolor_Sepal, main="versicolor_Sepal")
plot(versicolor_Petal, main="versicolor_Petal")
plot(virginica_Sepal, main="virginica_Sepal")
plot(virginica_Petal, main="virginica_Sepal")
dev.off()
png("D:/Workspace/R-Lecture/Part4/Graph/iris_length_width_1000.png", width = 1000, height = 1000)
par(mfrow=c(3,2))
plot(setosa_Sepal, main="setosa_Sepal")
plot(setosa_Petal, main="setosa_Petal")
plot(versicolor_Sepal, main="versicolor_Sepal")
plot(versicolor_Petal, main="versicolor_Petal")
plot(virginica_Sepal, main="virginica_Sepal")
plot(virginica_Petal, main="virginica_Sepal")
dev.off()
png("D:/Workspace/R-Lecture/Part4/Graph/iris_length_width_800.png", width = 800, height = 800)
png("D:/Workspace/R-Lecture/Part4/Graph/iris_length_width_800.png", width = 800, height = 800)
par(mfrow=c(3,2))
plot(setosa_Sepal, main="setosa_Sepal")
plot(setosa_Petal, main="setosa_Petal")
plot(versicolor_Sepal, main="versicolor_Sepal")
plot(versicolor_Petal, main="versicolor_Petal")
plot(virginica_Sepal, main="virginica_Sepal")
plot(virginica_Petal, main="virginica_Sepal")
dev.off()
png("D:/Workspace/R-Lecture/Part4/Graph/iris_length_width_600.png", width = 600, height = 600)
png("D:/Workspace/R-Lecture/Part4/Graph/iris_length_width_600.png", width = 600, height = 600)
par(mfrow=c(3,2))
plot(setosa_Sepal, main="setosa_Sepal")
plot(setosa_Petal, main="setosa_Petal")
plot(versicolor_Sepal, main="versicolor_Sepal")
plot(versicolor_Petal, main="versicolor_Petal")
plot(virginica_Sepal, main="virginica_Sepal")
plot(virginica_Petal, main="virginica_Sepal")
dev.off()
png("D:/Workspace/R-Lecture/Part4/Graph/iris_length_width.png", width = 600, height = 600)
par(mfrow=c(3,2))
plot(setosa_Sepal, main="setosa_Sepal")
plot(setosa_Petal, main="setosa_Petal")
plot(versicolor_Sepal, main="versicolor_Sepal")
plot(versicolor_Petal, main="versicolor_Petal")
plot(virginica_Sepal, main="virginica_Sepal")
plot(virginica_Petal, main="virginica_Sepal")
dev.off()
par(mfrow=c(1,2))
setosa <- subset(iris, Species == "setosa", -5)
setosa_mean <- apply(setosa, 2, mean)
versicolor <- subset(iris, Species == "versicolor", -5)
versicolor_mean <- apply(versicolor, 2, mean)
virginica <- subset(iris, Species == "virginica", -5)
virginica_mean <- apply(virginica, 2, mean)
iris_mean <- rbind(setosa_mean, versicolor_mean, virginica_mean)
iris_mean_t <- t(iris_mean)
barplot(as.matrix(iris_mean_t), beside=T)
barplot(as.matrix(iris_mean_t))
plot(setosa_Sepal, main="setosa_Sepal")
