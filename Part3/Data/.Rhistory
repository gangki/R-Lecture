class_cty <- mpg %>%
select(class, cty)
class_cty
View(class_cty)
View(class_cty)
class_cty %>%
filter(class == compact)
class_cty %>%
filter(class == 'compact')
class_cty %>%
filter(class, c('suv', 'compact'))
class_cty %>%
filter(class == c('suv', 'compact'))
class_cty %>%
filter(class == c('suv', 'compact')) %>%
summarise(average, mean(cty))
class_cty %>%
filter(class == c('suv', 'compact')) %>%
summarise(average = mean(cty))
class_cty %>%
filter(class == c('suv', 'compact')) %>%
summarise_each(average = mean(cty))
class_cty %>%
filter(class == c('suv', 'compact')) %>%
group_by(class)
summarise_each(average = mean(cty))
summarise(average = mean(cty))
group_by(팀) %>%
data1 %>%
group_by(팀) %>%
summarise_each(list(mean), 경기, 타수)
data1 %>%
group_by(팀) %>%
summarise_each(list(mean), 경기, 타수)
data1 %>%
group_by(팀) %>%
summarise_each(funs(mean,n()), 경기, 타수)
summarise(list(mean(cty))
class_cty %>%
filter(class == c('suv', 'compact')) %>%
group_by(class)
summarise(list(mean(cty))
group_by(class) %>%
summarise(list(mean(cty))
class_cty %>%
filter(class == c('suv', 'compact')) %>%
group_by(class) %>%
summarise(list(mean(cty))
class_cty %>%
filter(class == c('suv', 'compact')) %>%
group_by(class) %>%
summarise(list(mean),cty)
class_cty %>%
filter(class == c('suv', 'compact')) %>%
group_by(class) %>%
summarise(list(mean),cty))
class_cty %>%
#filter(class == c('suv', 'compact')) %>%
group_by(class) %>%
summarise(list(mean),cty))
class_cty %>%
#filter(class == c('suv', 'compact')) %>%
group_by(class) %>%
summarise(list(mean),cty))
class_cty %>%
#filter(class == c('suv', 'compact')) %>%
group_by(class) %>%
class_cty %>%
#filter(class == c('suv', 'compact')) %>%
group_by(class) %>%
summarise(list(mean),cty))
class_cty %>%
#filter(class == c('suv', 'compact')) %>%
group_by(class) %>%
summarise(list(mean),cty)
class_cty %>%
#filter(class == c('suv', 'compact')) %>%
group_by(class) %>%
summarise(list(mean),cty)
class_cty %>%
#filter(class == c('suv', 'compact')) %>%
group_by(class) %>%
summarise(list(mean), 'cty')
class_cty %>%
#filter(class == c('suv', 'compact')) %>%
group_by(class) %>%
summarise(average = mean(cty))
class_cty %>%
filter(class == c('suv', 'compact')) %>%
group_by(class) %>%
summarise(average = mean(cty))
mpg %>%
filter(manufacturer == audi)
mpg %>%
filter(manufacturer == 'audi')
mpg %>%
filter(manufacturer == 'audi') %>%
arrange(desc(hwy))
mpg %>%
filter(manufacturer == 'audi') %>%
arrange(desc(hwy),5)
mpg %>%
filter(manufacturer == 'audi') %>%
arrange(desc(hwy))
mpg_copy <- mpg %>%
mutate(합산연비 = cty + hwy)
mpg_copy <- mpg %>%
mutate(합산연비 = cty + hwy) %>%
mutate(평균연비 = 합산연비 / 2)
mpg_copy <- mpg %>%
mutate(합산연비 = cty + hwy) %>%
mutate(평균연비 = 합산연비 / 2) %>%
group_by(모델) %>%
arrange(desc(평균연비))
mpg_copy <- mpg %>%
mutate(합산연비 = cty + hwy) %>%
mutate(평균연비 = 합산연비 / 2) %>%
group_by(model) %>%
arrange(desc(평균연비))
mpg_copy
group_by(model) %>%
arrange(desc(평균연비))
group_by(model) %>%
arrange(desc(평균연비))
mpg_copy %>%
group_by(model) %>%
arrange(desc(평균연비))
View(mpg_copy)
View(mpg_copy)
mpg_copy %>%
group_by(model) %>%
summarise(average = mean(평균연비)) %>%
arrange(desc(평균연비))
mpg_copy %>%
group_by(model) %>%
summarise(average = mean(평균연비)) %>%
arrange(desc(평균연비))
mpg_copy %>%
group_by(model) %>%
summarise(average = mean(평균연비)) %>%
arrange(desc(평균연비))
mpg_copy
View(mpg_copy)
View(mpg_copy)
mpg_copy %>%
group_by(model) %>%
#summarise(average = mean(평균연비)) %>%
arrange(desc(평균연비))
data1 %>%
group_by(팀) %>%
summarise(average = mean(경기, na.rm = T))
View(mpg_copy)
View(mpg_copy)
mpg_copy %>%
group_by(model) %>%
mpg_copy <- mpg %>%
mutate(합산연비 = cty + hwy) %>%
mutate(평균연비 = 합산연비 / 2)
mpg_copy
mpg_copy <- mpg %>%
mutate(합산연비 = cty + hwy) %>%
mutate(평균연비 = 합산연비 / 2)
mpg_copy %>%
group_by(model) %>%
summarise(average = mean(평균연비)) %>%
arrange(desc(평균연비))
mpg_copy %>%
group_by(model) %>%
summarise(average = mean(평균연비))
mpg_copy %>%
group_by(model) %>%
summarise(average = mean(평균연비)) %>%
arrange(desc(average))
mpg_copy <- mpg %>%
mutate(합산연비 = cty + hwy) %>%
mutate(평균연비 = 합산연비 / 2)
mpg_copy %>%
group_by(model) %>%
summarise(average = mean(평균연비)) %>%
arrange(desc(average))
# 문제 8번
mpg %>%
group_by(class) %>%
summarise(average = mean(cty))
# 문제 9번
mpg %>%
group_by(class) %>%
summarise(average = mean(cty)) %>%
arrange(desc(average))
mpg %>%
group_by(manufacturer) %>%
summarise(average = mean(hwy)) %>%
arrange(desc(average))
mpg %>%
group_by(manufacturer) %>%
summarise(average = mean(hwy)) %>%
arrange(desc(average),head(3))
mpg %>%
group_by(manufacturer) %>%
summarise(average = mean(hwy)) %>%
arrange(desc(average),head = 3)
mpg %>%
group_by(manufacturer) %>%
summarise(average = mean(hwy)) %>%
arrange(desc(average))
mpg %>%
group_by(manufacturer) %>%
filter(class == compact) %>%
summarise() %>%
arrange(desc(average))
mpg %>%
group_by(manufacturer) %>%
filter(class == 'compact') %>%
summarise() %>%
arrange(desc(average))
mpg %>%
group_by(manufacturer) %>%
filter(class == 'compact') %>%
mpg %>%
group_by(manufacturer) %>%
filter(class == 'compact') %>%
mpg %>%
group_by(manufacturer) %>%
filter(class == 'compact')
mpg %>%
group_by(manufacturer) %>%
filter(class == compact)
mpg %>%
group_by(manufacturer) %>%
filter(class == compact)
mpg %>%
group_by(manufacturer) %>%
filter(class == 'compact')
mpg %>%
group_by(manufacturer) %>%
#filter(class == 'compact')
summarise(sum = sum(compact))
mpg %>%
group_by(manufacturer) %>%
#filter(class == 'compact')
summarise(sum = sum(class))
mpg %>%
group_by(manufacturer) %>%
#filter(class == 'compact')
summarise(sum = sum(class), n())
mpg %>%
group_by(manufacturer) %>%
#filter(class == 'compact')
summarise(sum = sum(class, n()))
mpg %>%
group_by(manufacturer) %>%
#filter(class == 'compact')
summarise(sum = sum(class), n())
mpg %>%
group_by(manufacturer) %>%
#filter(class == 'compact')
summarise_each(list(sum, n()), class)
mpg %>%
group_by(manufacturer) %>%
#filter(class == 'compact')
summarise(sum = as.numeric(sum(class)))
mpg %>%
group_by(manufacturer)
mpg %>%
group_by(manufacturer) %>%
filter(class == 'compact')
mpg %>%
group_by(manufacturer, model) %>%
filter(class == 'compact')
mpg %>%
filter(class == 'compact')
group_by(manufacturer, model) %>%
group_by(manufacturer, model) %>%
?summarise()
group_by(manufacturer, model) %>%
?summarise()
?summarise()
group_by(manufacturer, model) %>%
summarise(n_distinct(model))
mpg %>%
filter(class == 'compact')
group_by(manufacturer, model) %>%
summarise(n_distinct(model))
mpg %>%
filter(class == 'compact')
group_by(manufacturer, model) %>%
group_by(manufacturer, model) %>%
summarise(n_distinct(model))
group_by(manufacturer) %>%
summarise(n_distinct(model))
mpg %>%
filter(class == 'compact')
group_by(manufacturer) %>%
summarise(n_distinct(model))
mpg %>%
filter(class == 'compact')
mpg %>%
filter(class == 'compact')
group_by(manufacturer) %>%
group_by(manufacturer) %>%
summarise(n(model))
group_by(manufacturer) %>%
summarise(n(model))
head(5)
mpg %>%
group_by(manufacturer) %>%
summarise(average = mean(hwy)) %>%
arrange(desc(average))
head(5)
mpg %>%
group_by(manufacturer) %>%
summarise(average = mean(hwy)) %>%
arrange(desc(average)) %>%
head(5)
mpg_copy %>%
group_by(model) %>%
summarise(average = mean(평균연비)) %>%
arrange(desc(average)) %>%
head(3)
mpg %>%
filter(manufacturer == 'audi') %>%
arrange(desc(hwy)) %>%
head(5)
group_by(manufacturer) %>%
summarise(count = n())
mpg %>%
filter(class == 'compact')
group_by(manufacturer) %>%
summarise(count = n())
mpg %>%
group_by(manufacturer) %>%
filter(class == 'compact') %>%
summarise(count = n())
mpg %>%
group_by(manufacturer) %>%
filter(class == 'compact') %>%
summarise(count = n()) %>%
arrange(desc(count))
mpg %>%
filter(displ <= 4) %>%
summarise(average = mean(hwy, na.rm = T))
mpg %>%
filter(displ >= 5) %>%
summarise(average = mean(hwy, na.rm = T))
mpg4 <- filter(mpg, displ <= 4)
mpg4 <- filter(mpg, displ <= 4); mpg4
mpg4 <- filter(mpg, displ <= 4); mpg4
mean(mpg4$hwy); mean(mpg5$hwy);
mpg4 <- filter(mpg, displ <= 4);
mpg5 <- filter(mpg, displ >= 5);
mean(mpg4$hwy); mean(mpg5$hwy);
mpg %>%
group_by(manufacturer) %>%
summarise(average = mean(cty, na.rm = T))
mean(mpg_a$cty); mean(mpg_t$cty)
mpg_a <- filter(mpg, manufacturer == 'audi')
mpg_t <- filter(mpg, manufacturer == 'toyota')
mean(mpg_a$cty); mean(mpg_t$cty)
mpg %>%
group_by(manufacturer) %>%
summarise(average = mean(cty, na.rm = T))
mpg %>%
group_by(manufacturer) %>%
summarise(average = mean(cty, na.rm = T)) %>%
filter(manufacturer = c('audi', 'toyota'))
mpg %>%
group_by(manufacturer) %>%
summarise(average = mean(cty, na.rm = T)) %>%
filter(manufacturer == c('audi', 'toyota'))
mpg %>%
group_by(manufacturer) %>%
summarise(average = mean(cty, na.rm = T)) %>%
filter(manufacturer == c('audi', 'toyota'))
class_cty <- mpg %>%
select(class, cty)
class_cty %>%
filter(class == 'compact')
mpg %>%
group_by(manufacturer) %>%
summarise(average = mean(cty)) %>%
filter(manufacturer == c('audi', 'toyota'))
class_cty %>%
filter(class == c('suv', 'compact')) %>%
group_by(class) %>%
summarise(average = mean(cty))
mpg %>%
filter(manufacturer == 'audi') %>%
arrange(desc(hwy)) %>%
head(5)
mpg %>%
filter(manufacturer == 'audi') %>%
arrange(desc(hwy)) %>%
head(1,3)
mpg %>%
filter(manufacturer == 'audi') %>%
arrange(desc(hwy)) %>%
head(1,3)
mpg %>%
filter(manufacturer == 'audi') %>%
arrange(desc(hwy)) %>%
head(5)
mpg_copy %>%
mutate(합산연비 = cty + hwy,평균연비 = 합산연비 / 2)%>%
arrange(desc(average)) %>%
head(3)
mpg_copy %>%
mutate(합산연비 = cty + hwy,평균연비 = 합산연비 / 2)%>%
summarise(average = mean(평균연비)) %>%
arrange(desc(average)) %>%
head(3)
mpg_copy %>%
mutate(합산연비 = cty + hwy,평균연비 = 합산연비 / 2)%>%
summarise(average = mean(평균연비)) %>%
arrange(desc(average)) %>%
head(3)
mpg_copy %>%
mutate(합산연비 = cty + hwy,평균연비 = 합산연비 / 2)%>%
group_by(model) %>%
summarise(average = mean(평균연비)) %>%
arrange(desc(average)) %>%
head(3)
mpg %>%
group_by(manufacturer) %>%
summarise(average = mean(hwy)) %>%
arrange(desc(average)) %>%
head(3)
mpg %>%
group_by(manufacturer) %>%
filter(class == 'compact') %>%
summarise(count = n()) %>%
arrange(desc(count))
install.packages('reshpape2')
install.packages('reshape2')
library(reshape2)
fruits
Fruits
melt(Fruits, id='Year')
fruits
melt(Fruits, id='Year', 'Fruit')
melt(Fruits, id=c('Year', 'Fruit'))
library(reshape2)
library('reshape2')
attach(fruits)
library(googleVis)
fruits
attach(fruits)
library(googleVis)
attach(fruits)
install.packages('reshape2')
install.packages("reshape2")
library(reshape2)
fruits
library("reshape2")
fruits
install.packages('stringr')
install.packages("stringr")
library(stringr)
fruit
fruits
str_detect(fruits, 'A')
fruits <- c('apple', 'Apple', 'banana', 'pineapple')
str_detect(fruits, 'A')
str_detect(fruits, 'a')
str_detect(fruits, '^a')
str_detect(fruits, '^a') # ^:단어의 처음, $:단어의 끝
str_detect(fruits, 'e$')
str_detect(fruits, '^[aA]')
str_detect(fruits, '[aA]')
str_detect(fruits.ignore.case('a'))
str_detect(fruits,ignore.case('a'))
str_detect(fruits,ignore.case())
str_detect('a', ignore.case('a'))
str_detect(fruits, regex('a', ignore_case = T)
str_detect(fruits, regex('a', ignore_case = T))
str_detect(fruits, regex('a', ignore_case = T)
fruits <- c('apple', 'Apple', 'banana', 'pineapple')
str_detect(fruits, regex('a', ignore_case = T)
str_detect(fruits, regex('a', ignore_case = T))
str_detect(fruits, '[aA]')
str_detect(fruits, regex('a', ignore_case = T))
fruits
str_count(fruit, 'a')
str_count(fruits, 'a')
str_c("apple","banana")
str_c("Fruits:", fruits)
str_c(fruits, "name is", fruits)
str_c(fruits, " name is ", fruits)
str_c(fruits, collapse="")
str_c(fruits, collapse=",")
str_c(fruits, collapse=", ")
str_dup(fruits,3)
str_length('과일')
str_locate('apple', 'a')
str_locate(fruits, 'a')
str_locate('apple', 'app')
str_replace('apple','p','*')
str_replace('apple','p','++')
str_replace all('apple','p','*')
str_replace_all('apple','p','*')
fruits <- str_c('apple','/','orange','/','banana')
fruits
str_split(fruits, '/')
str sub(fruits,start=1, end=3)
str_sub(fruits, start=1, end=3)
str_sub(fruits,start=6, end=9)
str_sub(fruits, start=6, end=9)
str_sub(fruits, start=-5)
str_trim(' apple banana berry ')
str_trim('\t apple banana berry ')
str_sub(fruits, start=7)
str_trim('\t apple banana berry \n  apple banana berry  ')
str_trim('\t apple banana berry \n')
