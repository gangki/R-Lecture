list1
View(list1)
View(list1)
list1$birth <- NULL
View(list1)
View(list1)
rm(list=ls())
no <- c(1:4)
name <- c('Apple', 'Peach', 'Banana', 'Grape')
price <- c(500, 200, 100, 50)
qty <- c(5,2,4,7)
sales <- data.frame(NO=no, NAME=name, PRICE=price, QTY=qty)
sales
View(sales)
View(sales)
sales <- matrix(c(1,'apple',500,5,
2,'Peach',200,2,
3,'Banana',100,4
4,'Grape',50,7),nrow=4,byrow=T)
sales <- data.frame(NO=no, NAME=name, PRICE=price, QTY=qty)
sales
sales2 <- matrix(c(1,'apple',500,5,
2,'Peach',200,2,
3,'Banana',100,4
4,'Grape',50,7),nrow=4,byrow=T)
sales
sales2 <- matrix(c(1,'apple',500,5,
2,'Peach',200,2,
3,'Banana',100,4,
4,'Grape',50,7),nrow=4,byrow=T)
sales
sales2
sales2
df1 <- data.frame(sales2)
df1
View(df1)
View(df1)
names(df1) <- c('NO','NAME','PRICE','QTY')
source('~/.active-rstudio-document', echo=TRUE)
sales
sales$NAME
sales[1,3]
sales[3]
sales$PRICE
sales[,3]
sales[1,]
sales[c(1,2),]
sales[c(1:3),]
sales[c(1:3),2]
sales[,c(1,2)]
subset(sales, QTY<5)
subset(sales, PRICE==500)
subset(sales, PRICE!=500)
subset(sales, NAME==grape)
subset(sales, NAME=='grape')
subset(sales, NAME=='Grape')
no <- c(1,2,3)
name <- c('apple','banana','peach')
price <- c(100,200,300)
df1 <- data.frame(NO=no, NAME=name, PRICE=price)
df1
View(df1)
View(df1)
df2
no <- c(10,20,30)
name <- c('train','car','airplane')
price <- c(1000,2000,3000)
df2 <- data.frame(NO=no, NAME=name, PRICE=price)
df2
df3 <- cbind(df1,df2)
df3 <- cbind(df1,df2)
df3
df3$NAME
df3[,5]
df4 <- rbind(df1,df2)
df4
df4[,1]
df4[,2]
df5 <- data.frame(name=c('apple','banana','cherry'),price=c(300,200,100))
df5 <- data.frame(name=c('apple','banana','cherry'),price=c(300,200,100)); df5
df6 <- data.frame(name=c('apple','cherry','berry'),qty=c(10,20,30)); df6
merge(dif5,df6)
merge(df5,df6)
merge(df5, df6, all=T)
rbind(df5, df6)
cbind(df5, df6)
cbind(df6, df5)
df5
new <- data.frame(name='mango',price=400)
new
df5 <- rbind(df5, new); df5
df5 <- rbind(df5, data.frame(name='berry',price=500)); df5
df5 <- cbind(df5, data.frame(qty=c(10,20,30,40,50)))
df5 <- cbind(df5, data.frame(qty=c(10,20,30,40,50))); df5
no <- c(1,2,3,4,5)
name <- c('서진수','주시현','최경우','이동근','윤정웅')
address <- c('서울','대전','포항','경주','경기기')
address <- c('서울','대전','포항','경주','경기')
tel <- c(1111,2222,3333,4444,5555)
hobby <- c('독서','미술','놀고먹기','먹고놀기','노는애감사하기')
hobby <- c('독서','미술','놀고먹기','먹고놀기','노는애감시시하기')
hobby <- c('독서','미술','놀고먹기','먹고놀기','노는애감시하기')
member <- data.frame(NO=no, NAME=name, ADDRESS=address, TEL=tel, HOBBY=hobby)
member
View(member)
View(member)
member2 <- subset(member, select = c(NO,NAME,TEL)); member2
member3 <- subset(member, select = -TEL); member2
member3 <- subset(member, select = -TEL); member3
member <- data.frame(NO=no, NAME=name, ADDRESS=address, TEL=tel, HOBBY=hobby); member
member <- data.frame(NO=no, NAME=name, ADDRESS=address, TEL=tel, HOBBY=hobby); member
member2 <- subset(member, select = c(NO,NAME,TEL)); member2
member3 <- subset(member, select = -TEL); member3
colnames(member3) <- c('번호','이름','주소','취미'); member3
sales
ncol(sales)
nrow(sales)
names(sales)
rownames(sales)
rownames(sales) <- c('one', 'two', 'three', 'four'); sales
row.names(slaes)
row.names(sales)
sales[c(2,3,1),]
sales[,c(2,3,1)]
# Load and Save Data
list.files()
scan1 <- scan('scan_1.txt')
scan1
# Load and Save Data
list.files()
scan2 <- scan('scan2.txt')
scan2 <- scan('scan_2.txt')
scan2
scan2 <- scan('scan_2.txt',what=""); scan2
class(scan2)
scan3 <- scan('scan_3.txt',"what="); scan3
scan4 <- scan('scan_4.txt',what=""); scan4
# Load and Save Data
list.files()
input <- scan()
input
input <- scan(what="")
input
input <- scan() # 사용자로부터 입력 받을 때
input <- scan(what="")
input
input3 <- readline()
input3
input4 <- readline("Are you OK? :")
input4
input4 <- readline("Are you OK? : ")
input4
input5 <- readLines('scan_4.txt')
input5
fruits <- read.table('fruits.txt')
# Load and Save Data
list.files()
fruits <- read.table('fruits.txt')
fruits <- read.table('fruits.txt')
fruits
fruits <- read.table('fruits.txt', header=T)
fruits
fruits2 <- read.table('fruits_2.txt'); fruits2
fruit2 <- read.table('gruits_2.txt',skip=2)
fruit2
fruit2 <- read.table('gruits_2.txt',skip=2)
fruit2 <- read.table('fruits_2.txt',skip=2)
fruit2
fruit2 <- read.table('fruits_2.txt',nrows=2);fruit2
f2top <- read.table('fruits_2.txt',nrows=2); f2top
f2bottom <- read.table('fruits_2.txt',skip=3)
f2bottom <- read.table('fruits_2.txt',skip=3); f2bottom
fruit2 <- read.table('fruits_2.txt',skip=2)
fruit2
fruit3 <- read.csv('fruits_3.csv'); fruit3
fruit4 <- read.csv('fruits_4.csv',header = F)
fruit4
fruit4 <- read.csv('fruits_4.csv')
fruit4
label <- c('NO', 'Name', 'PRICE', 'QTY')
fruit4 <- read.csv('fruits_4.csv', header=F, col.names=label)
fruit4
install.packages("googleVis")
library(googleVis)
install.packages("sqldf"")
install.packages("sqldf")
install.packages("sqldf")
library(sqldf)
Fruits
write.csv(Fruits, "Fruits_sql.csv", quote=F, row.names = F)
fruits_2 <- read.csv.sql("Fruits_sql.csv",
sql = "SELECT * FROM file WHERE year = 2008")
fruits_2
Fruits[,1]
Fruits[, c(Year==2008)]
Fruits[, c(2==2008)]
Fruits[c(2==2008)]
install.packages("XLConnect")
installed.packages()
library(XLConnect)
data1=loadWorkbook("fruits_6.xls",create = T)
data1 <- loadWorkbook("fruits_6.xls",create = T)
data2 <- readWorksheet(data1, sheet = "sheet1",
startRow = 1,
endRow = 8,
startCol = 1,
endCol = 5)
data2
fruits6 <- read.delim("clipboard", header = T)
fruits6
install.packages("readxl")
library("readxl")
data1 <- read_excel("D:\Workspace\R_Data_analysis\Part3\Data", sheet=1, colnames(TRUE, col_types = NULL,m na = "", skip=0))
data1 <- read_excel("D:\\Workspace\R_Data_analysis\Part3\Data", sheet=1, colnames(TRUE, col_types = NULL,m na = "", skip=0))
data1 <- read_excel("D:\\Workspace\R_Data_analysis\Part3\Data\전국_지역별_연도별_1인당_소득현황_2004년_2013년_가로.xlsx",
sheet=1, colnames(TRUE, col_types = NULL,m na = "", skip=0))
data1 <- read_excel("D:\\Workspace\R_Data_analysis\Part3\Data\전국_지역별_연도별_1인당_소득현황_2004년_2013년_가로.xlsx",
sheet=1, colnames = TRUE, col_types = NULL,m na = "", skip=0)
data1 <- read_excel("D:\\Workspace\R_Data_analysis\Part3\Data\전국_지역별_연도별_1인당_소득현황_2004년_2013년_가로.xlsx", sheet=1, colnames = TRUE, col_types = NULL,m na = "", skip=0)
data1 <- read_excel("D:\Workspace\R_Data_analysis\Part3\Data\전국_지역별_연도별_1인당_소득현황_2004년_2013년_가로.xlsx", sheet=1, colnames = TRUE, col_types = NULL,m na = "", skip=0)
data1 <- read_excel("D:\Workspace\R_Data_analysis\Part3\Data\전국_지역별_연도별_1인당_소득현황_2004년_2013년_가로.xlsx", sheet=1, colnames = TRUE, col_types = NULL,m na = "", skip=0)
data1 <- read_excel("D:\Workspace\R_Data_analysis\Part3\Data\전국_지역별_연도별_1인당_소득현황_2004년_2013년_가로.xlsx", sheet=1, col_names = TRUE, col_types = NULL, na = "", skip=0)
data1 <- read_excel("D:/Workspace/R_Data_analysis/Part3/Data/전국_지역별_연도별_1인당_소득현황_2004년_2013년_가로.xlsx", sheet=1, col_names = TRUE, col_types = NULL, na = "", skip=0)
data1
subset(Fruits, Fruits$Year==2008)
fruits_3
fruits_3 <- subset(Fruits, Fruits$Year==2008)
fruits_3
?subset()
rm(list=ls())
?class()
vec1 <- c(1:5)
vec2 <- c('a':'e')
vec2 <- c('a''b','c','d','e')
max(vec1)
max(vec2)
vec2 <- c('a','b','c','d','e')
max(vec2)
mean(vec1)
mean(vec2)
min(vec1)
sd(vec1)
sum(vec1)
var(vec1)
library(googleVis)
Fruits
aggregate(Sales~Year,Fruits,sum)
aggregate(Sales~Year,Fruits,max)
aggregate(Sales~Year,Fruits,min)
aggregate(Sales~Year,Fruits,mean)
aggregate(Sales~Fruit, Fruits, sum)
aggregate(Sales~Fruit, Fruits, max)
aggregate(Sales~Fruit+Year, Fruits, max)
aggregate(Sales~Year+Fruit, Fruits, max)
mat1 <- matrix(c(1:6), nrow=2, byrow=T)
mat1 <- matrix(c(1:6), nrow=2, byrow=T); mat1
mat1 <- matrix(c(1:6), nrow=2, byrow=); mat1
mat1 <- matrix(c(1:6), nrow=2, byrow=T); mat1
apply(mat1,1,sum) # 1 - 행 단위 계산산
apply(mat1,2,sum) # 2- 열 단위 계산
apply(mat1,1,pod) # 2- 열 단위 계산
apply(mat1,1,prod) # 2- 열 단위 계산
apply(mat1[,c(2,3)],1,sum)
mat1[,c(2,3)
mat1[,c(2,3)]
apply(mat1[,c(2,3)],1,sum)
list1 <- Fruits$Sales;list1
list1 <- Fruits$Sales; list1
Fruits
list1 <- list(Fruits$Sales); list1
list2 <- list(Fruits$Profit); list2
View(list2)
View(list2)
View(list2)
View(list2)
lapply(c(list1, list2), max)
list1 <- list(Fruits$Sales); list1
list2 <- list(Fruits$Profit); list2
sapply(c(list1, list2), max)
lapply(Fruits[,c(4,5)], max)
sapply(Fruits[,c(4,5)], max)
Fruits
tapply(Sales, Fruit, sum)
attach(Fruits)
tapply(Sales, Fruit, sum)
tapply(Sale, Year, sum)
tapply(Sales, Year, sum)
vec1 <- c(1:5)
vec2 <- seq(10,50,10)
vec2
vec3 <- seq(100, 500, 100)
mapply(sum,vec1,vec2,vec3)
vec1
vec2
vec3
mapply(sum,vec1,vec2,vec3)
data1 <- read.csv('data1.csv')
data1
data1
apply(data1[,,],2,sum)
apply(data1,2,sum)
apply(data1[c(2,3,4,5,6),],2,sum)
aggregate(Sales~Year,Fruits,sum)
aggregate(Sales~Fruit, Fruits, sum)
apply(mat1,1,sum) # 1 - 행 단위 계산
apply(mat1,2,sum) # 2- 열 단위 계산
apply(mat1[,c(2,3)],1,sum)
lapply(c(list1, list2), max)
tapply(Sales, Fruit, sum)
sapply(Fruits[,,], sum)
data1
apply(c(2:5),c(2:15),2,sum)
apply(data1[c(2:5),c(2:15)],2,sum)
apply(data1[c(1:5),c(2:15)],2,sum)
apply(data1[c(1:5),c(1:15)],2,sum)
apply(data1[c(1:5),c(2:15)],2,sum)
apply(data1[c(1:5),c(2:,)],2,sum)
apply(data1[c(1:5),c(2:15)],2,sum)
apply(data1[c(1:5),c(2:15)],1,sum)
apply(data1[c(2:5),c(2:15)],1,sum)
apply(data1[c(1:5),c(2:15)],1,sum)
apply(data1[c(1:5),c(1:15)],1,sum)
apply(data1[c(1:5),c(2:15)],1,sum)
data2 <- read.csv('1-4호선승하차승객수')
data2 <- read.csv('1-4호선승하차승객수.csv')
data2 <- read.csv('1-4호선승하차승객수.csv'); data2
apply(mat1,1,sum) # 1 - 행 단위 계산
tapply('노선번호', '승차', sum)
tapply(노선번호, 승차, sum)
attach('1-4호선승하차승객수.csv')
tapply(노선번호, 승차, sum)
attach('1-4호선승하차승객수')
attach('1-4호선승하차승객수.csv')
attach(1-4호선승하차승객수.csv)
data2 <- read.csv('1-4호선승하차승객수.csv'); data2
attach(data2)
tapply(노선번호, 승차, sum)
tapply(승차, 노선번호, sum)
tapply(하하차, 노선번호, sum)
tapply(하차, 노선번호, sum)
apply(data2[,c(3,4)],sum)
apply(data2[,c(3,4)],2,sum)
?tapply
?tapply()
apply(data2[,3],2,sum)
data2
apply(data1[c(1:5),c(2:15)],2,sum)
apply(data1[c(1:5),c(2:15)],1,sum)
tapply(승차, 노선번호, sum)
tapply(하차, 노선번호, sum)
apply(data2[,c(3,4)],2,sum)
aggregate(승차~노선번호,data2,sum)
aggregate(하하차~노선번호,data2,sum)
aggregate(하차~노선번호,data2,sum)
aggregate(승차+하차차~노선번호,data2,sum)
aggregate(승차+하차~노선번호,data2,sum)
tapply(승차, 노선번호, sum)
apply(data2[,c(3,4)],2,sum)
tapply(승차, 노선번호, sum)
tapply(승차, 노선번호, sum)
apply(data2[,c(3,4)],2,sum)
apply(data1[c(1:5),c(2:15)],2,sum) #년도별 합계
apply(data1[c(1:5),c(2:15)],1,sum) #연령별 합계
apply(data1[c(1:5),c(2:15)],2,sum) #년도별 합계
apply(data1[c(1:5),c(2:15)],1,sum) #연령별 합계
tapply(승차, 노선번호, sum) #노선 번호별 승차인원수 합계
apply(data1[,c(2:15)],2,sum) #년도별 합계
apply(data1[,c(2:15)],1,sum) #연령별 합계
apply(data1[,-1],1,sum) #연령별 합계
tapply(승차, 노선번호, sum) #노선 번호별 승차인원수 합계
tapply(하차, 노선번호, sum) #노선번호별 하차 인원수 합계
sapply(data2[,c(3,4)], sum)
apply(data2[,c(3,4)],2,sum) #노선 번호 상관없이 승차 하차 인원수 합계
# Function
mat1 <- matrix(c(1:6),nrow = 2,byrow = T); mat1
a <- rep(1,3)
a
sweep(mat1,2,a)
b <- matrix(c(2,3))
b
b <- matrix(c(2,2))
sweep(mat1,1,b)
mat1
b <- matrix(c(2,2))
sweep(mat1,1,b)
a <- c(1,2,3,4,5); length(a)
length(mat1)
library(googleVis)
length(Fruits)
mat1
Fruits
length(Fruits)
length(mat1)
mat1
a
a <- c(1,2,3,4,5); length(a)
log(10)
log10(10)
sin(pi)
abs(1)
abs(-1)
v2 <- c(1,-2,3,-4)
abs(v2)
ceiling(2.3)
floor(2.3)
floor(2.7)
ceiling(2.7)
ceiling(2.1)
floor(2.7)
ceiling(-2.1)
floor(-2.7)
round(2.5)
round(2.51)
!round(2.5)
!round
!round()
?round()
choose(5, 3)
myfunct <- function() {}
return(10)
myfunct <- function() {
return(10)
}
myfunct()
myfunct2 <- function(x) {
y = x * x;
return(y)
}
myfunct2(-3)
myfunct2 <- function(x) {
y = x * x;
return(x)
}
myfunct2(-3)
myfunct2 <- function(x) {
y = x * x;
return(y)
}
myfunct2(-3)
func_test1 <- function(x,y){
z = x - y
return(z)
}
func_test1
func_test1(10,5)
func_test1(10,2)
func_test1(10,-10)
func_test1(10,-20)
func_test1(2,-3)
func_test1 <- function(x,y){
z = x - (y)
return(z)
}
func_test1(2,-3)
func_test1(2,-3)
func_test1 <- function(x,y){
z = x - (y)
return(z)
}
func_test1(2,-3)
func_test1(2,3)
func_test1(2,3)
myfunct2(-3)
func_test1 <- function(x,y){
z = x - y
return(abs(z)
}
func_test1(2,3)
myfunct2(-3)
func_test1 <- function(x,y){
z = x - y
return(abs(z))
}
func_test1(2,3)
func_test1(2,4)
return(result)
func_test1 <- function(a,b){
result <- a - b
return(result)
}
func_test1(2,4)
func_test1 <- function(a,b){
result = a - b
return(result)
}
func_test1(2,4)
func_test1 <- function(a,b){
result = a - b
return(abs(result))
func_test1(2,4)
func_test1(2,4)
func_test1(2,4)
func_test1 <- function(a,b){
result = a - b
return(abs(result))
}
func_test1(2,4)
func_test1(2,4)
func_test1 <- function(a,b){
abs(result_ = a - b
return(result)
}
func_test1 <- function(a,b){
abs(result) = a - b
return(result)
}
func_test1(2,4)
func_test1 <- function(a,b){
c = a - b
return(abs(c))
}
func_test1(2,4)
