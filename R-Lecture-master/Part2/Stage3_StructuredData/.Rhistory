palete <- brewer.pal(10, "RdGy")
pie(top10, col=palete, radius=1,
main="제주도 추천 여행 코스 TOP 10")
pct <- round(top10/sum(top10) * 100, 1)
pct
names(top10)
lab <- paste(names(top10), "\n", pct, "%")
lab
lab <- paste(names(top10), "\n", pct, "%", sep='')
lab
pie(top10, main="제주도 추천 여행 코스 TOP 10",
col=palete, cex=0.8, labels = lab)
# ggplot pie chart 그리기
top10
# ggplot pie chart 그리기
str(top10)
df_top10 <- as.data.frame(top10)
df_top10
ggplot(df_top10, aes(x='', y=Freq, fill=rev)) +
geom_bar(width=1, stat='identity')
library(ggplot2)
ggplot(df_top10, aes(x='', y=Freq, fill=rev)) +
geom_bar(width=1, stat='identity')
ggplot(df_top10, aes(x='', y=Freq, fill=rev)) +
geom_bar(width=1, stat='identity') +
coord_polar("y", start = 0)
library(dplyr)
df_top10 <- df_top10 %>%
mutate(pct = Freq / sum(Freq) * 100)
df_top10
options(digits = 2)
df_top10 <- df_top10 %>%
mutate(pct = Freq / sum(Freq) * 100)
df_top10
df_top10 <- df_top10 %>%
mutate(pct = Freq / sum(Freq) * 100) %>%
mutate(ylabel = paste(pct, '%', sep=''))
#mutate(ylabel = paste(sprintf("%4.1f", pct), '%', sep=''))
df_top10
df_top10 <- df_top10 %>%
mutate(pct = Freq / sum(Freq) * 100) %>%
#mutate(ylabel = paste(pct, '%', sep=''))
mutate(ylabel = paste(sprintf("%4.1f", pct), '%', sep=''))
df_top10
df_top10 <- df_top10 %>%
mutate(pct = Freq / sum(Freq) * 100) %>%
#mutate(ylabel = paste(pct, '%', sep=''))
mutate(ylabel = paste(sprintf("%4.1f", pct), '%', sep='')) %>%
arrange(desc(rev)) %>%
mutate(ypos = cumsum(pct) - 0.5*pct)
df_top10
ggplot(df_top10, aes(x='', y=Freq, fill=rev)) +
geom_bar(width=1, stat='identity') +
geom_text(aes(y=ypos, label=ylabel), color='black')
ggplot(df_top10, aes(x='', y=Freq, fill=rev)) +
geom_bar(width=1, stat='identity') +
coord_polar("y", start = 0) +
ggtitle("제주도 추천 여행 코스 TOP 10") +
geom_text(aes(y=ypos, label=ylabel), color='black')
df_top10 <- as.data.frame(top10)
df_top10 <- df_top10 %>%
mutate(pct = Freq / sum(Freq) * 100) %>%
#mutate(ylabel = paste(pct, '%', sep=''))
mutate(ylabel = paste(sprintf("%s\n%4.1f", rev, pct), '%', sep='')) %>%
arrange(desc(rev)) %>%
mutate(ypos = cumsum(pct) - 0.5*pct)
df_top10
ggplot(df_top10, aes(x='', y=Freq, fill=rev)) +
geom_bar(width=1, stat='identity') +
coord_polar("y", start = 0) +
ggtitle("제주도 추천 여행 코스 TOP 10") +
geom_text(aes(y=ypos, label=ylabel), color='black')
library(extrafont)
install.packages('extrafont')
library(extrafont)
windowsFonts()
windowsFonts(malgun = "맑은 고딕")
theme_update(text = element_text(family = "malgun"))
ggplot(df_top10, aes(x='', y=Freq, fill=rev)) +
geom_bar(width=1, stat='identity') +
coord_polar("y", start = 0) +
ggtitle("제주도 추천 여행 코스 TOP 10") +
theme(plot.title = element_text(face = "bold", hjust = 0.5,
size = 15, color = "darkblue")) +
geom_text(aes(y=ypos, label=ylabel), color='black')
windowsFonts()
ggplot(df_top10, aes(x='', y=Freq, fill=rev)) +
geom_bar(width=1, stat='identity') +
coord_polar("y", start = 0) +
ggtitle("제주도 추천 여행 코스 TOP 10") +
theme(plot.title = element_text(face = "bold", hjust = 0.5,
size = 15, color = "darkblue")) +
geom_text(aes(y=ypos, label=ylabel), face = "bold", color='white')
bchart <- head(sort(wordcount, decreasing=T),10)
bchart
bp <- barplot(bchart,  main = "제주도 추천 여행 코스 TOP 10", col = rainbow(10),
cex.names=0.7, las = 2, ylim=c(0,25))
pct <- round(bchart/sum(bchart) * 100, 1)
pct
text(x = bp, y = bchart*1.05, labels = paste("(",pct,"%",")"), col = "black", cex = 0.7)
text(x = bp, y = bchart*0.95, labels = paste(bchart,"건"), col = "black", cex = 0.7)
# 옆으로 누운 바 그래프 그리기
barplot(bchart, main="제주도 추천 여행 코스 Top 10", col=rainbow(10),
xlim=c(0,25), cex.name=0.7, las=1, horiz=T)
text(y = bp, x = bchart*0.9, labels = paste(bchart,"건"), col = "black", cex = 0.7)
text(y = bp, x = bchart*1.15, labels = paste("(",pct,"%",")"), col = "black", cex = 0.7)
library(plotrix)
install.packages('extrafont')
# 3D Pie Chart 그래프 그리기
th_pct <- round(bchart/sum(bchart) * 100, 1)
th_names <- names(bchart)
th_labels <- paste(th_names,"\n","(",th_pct,")")
pie3D(bchart,main="제주도 추천 여행 코스 Top 10",col=rainbow(10),
cex=0.3,labels=th_labels,explode=0.05)
setwd('D:/Workspace/R_Data_Analysis/Part2/Stage2_Graph/Ex02_Customer')
myray_1 <- readLines("new_myray.txt")
myray_2 <- sapply(myray_1, extractNoun, USE.NAMES=F)
my_ray3 <- unlist(myray_2)
my_ray3 <- Filter(function(x) {nchar(x) >= 2}, my_ray3)
my_ray3 <- gsub(" ", "-", my_ray3)
my_ray3 <- gsub("교체", "", my_ray3)
my_ray3 <- gsub("작동", "", my_ray3)
my_ray3 <- gsub("교환", "", my_ray3)
my_ray3 <- gsub("ㅠㅠ", "", my_ray3)
my_ray3 <- gsub("\\d+", "", my_ray3)
write(unlist(my_ray3), "myray_2.txt")
ray <- read.table("myray_2.txt")
wordcount <- table(ray)
my_ray4 <- head(sort(wordcount, decreasing=T), 10)
my_ray4
colors <- c()
for ( i in 1:length(my_ray4)) {
if (my_ray4[i] >= 8 ) {
colors <- c(colors,"red") }
else if (my_ray4[i] >= 6 ){
colors <- c(colors,"yellow") }
else {
colors <- c(colors,"green") }
}
bchart <- barplot(my_ray4, main="고객 불만 사항 상위 TOP 10",
ylab="불만건수", names.arg=names(my_ray4),
col=colors, las=2, ylim=c(0,13))
my_ray4
my_ray3 <- gsub("\\.", "", my_ray3)
write(unlist(my_ray3), "myray_2.txt")
ray <- read.table("myray_2.txt")
wordcount <- table(ray)
my_ray4 <- head(sort(wordcount, decreasing=T), 10)
my_ray4
colors <- c()
for ( i in 1:length(my_ray4)) {
if (my_ray4[i] >= 8 ) {
colors <- c(colors,"red") }
else if (my_ray4[i] >= 6 ){
colors <- c(colors,"yellow") }
else {
colors <- c(colors,"green") }
}
bchart <- barplot(my_ray4, main="고객 불만 사항 상위 TOP 10",
ylab="불만건수", names.arg=names(my_ray4),
col=colors, las=2, ylim=c(0,13))
text(x = bchart, y = my_ray4*0.95, labels = paste(my_ray4,"건"), col = "black",
cex = 0.7)
pct <- round(my_ray4/sum(my_ray4) * 100 ,1)
text(x = bchart, y = my_ray4*1.05, labels = paste("(",pct,"%",")"), col = "black",
cex = 0.6)
abline(h=8,col="red",lty=2,lwd=1)
abline(h=5,col="black",lty=2,lwd=1)
my_ray5 <- head(sort(wordcount, decreasing=T),10)
colors <- c()
for ( i in 1:length(my_ray5)) {
if (my_ray5[i] >= 8 ) {
colors <- c(colors,"red") }
else if (my_ray5[i] >= 6 ){
colors <- c(colors,"yellow") }
else {
colors <- c(colors,"green") }
}
lab <- paste(names(my_ray5),"\n",my_ray5,"건")
pie(my_ray5, main="고객 불만 사항 상위 Top 10", col=colors,
cex=0.8, labels = lab)
setwd('d:/workspace/r_data_analysis/part2/stage3_StructuredData')
data1 <- read.csv("2013년_서울_주요구별_병원현황.csv" , header=T)
data1
barplot(as.matrix(data1[1:9,2:11]),
main=paste("서울시 주요 구별 과목별 병원현황-2013년","\n",
"출처[국민건강보험공단]") , ylab="병원수", beside=T ,
col=rainbow(8),ylim=c(0,350))
abline(h=seq(0,350,10),lty=3,lwd=0.2)
name <- data1$표시과목
name
legend(75,350,name,cex=0.8,fill=rainbow(8),bg="white")
v1 <- data1[1:9,2]*0.1 # 강남구 값
v2 <- data1[1:9,3]*0.1 # 강동구 값
v3 <- data1[1:9,4]*0.1 # 강서구 값
v4 <- data1[1:9,5]*0.1 # 관악구 값
v5 <- data1[1:9,6]*0.1 # 구로구 값
v6 <- data1[1:9,7]*0.1 # 도봉구 값
v7 <- data1[1:9,8]*0.1 # 동대문구 값
v8 <- data1[1:9,9]*0.1 # 동작구 값
v9 <- data1[1:9,10]*0.1 # 마포구 값
v10 <- data1[1:9,11]*0.1 # 서대문구 값
par(mfrow=c(2,5))
par(mfrow=c(1,1))
library(googleVis)
data <- read.csv("2013년_서울_구별_주요과목별병원현황_구글용utf8.csv",header=T)
data <- read.csv("2013년_서울_구별_주요과목별병원현황_구글용.csv",header=T)
data
hos <- gvisColumnChart(data,options=list(title="지역별 병원현황",
height=400,weight=500))
plot(hos)
data <- read.csv("2013년_서울_구별_주요과목별병원현황_구글용.csv",
header=T, fileEncoding = 'euc-kr',
encoding = 'utf-8')
data
hos <- gvisColumnChart(data,options=list(title="지역별 병원현황",
height=400,weight=500))
plot(hos)
data
hos <- gvisColumnChart(data,options=list(title="지역별 병원현황",
height=400,weight=500))
header <- hos$html$header
header <- gsub("charset=utf-8", "charset=euc-kr", header)
hos$html$header <- header
plot(hos)
header
count <- read.csv("연도별요양기관별보험청구건수_2001_2013_세로.csv",
stringsAsFactors = FALSE)
count
colname <- count$년도
colname <- count$년도
colname
v1 <- count[,2]/100000
v2 <- count[,3]/100000
v3 <- count[,4]/100000
v4 <- count[,5]/100000
v5 <- count[,6]/100000
v6 <- count[,7]/100000
v7 <- count[,8]/100000
v8 <- count[,9]/100000
v9 <- count[,10]/100000
v10 <- count[,11]/100000
plot(v1,xlab="",ylab="",ylim=c(0,6000),axes=FALSE,col="violet",type="o",lwd=2,
main=paste("연도별 요양 기관별 보험 청구 건수(단위:십만건)","\n",
"출처:건강보험심사평가원"))
axis(1,at=1:10,label=colname,las=2)
axis(2,las=1)
lines(v2 ,col="blue",type="o",lwd=2)
lines(v3 ,col="red",type="o",lwd=2)
lines(v4 ,col="black",type="o",lwd=2)
lines(v5 ,col="orange",type="o",lwd=2)
lines(v6 ,col="green",type="o",lwd=2)
lines(v7 ,col="cyan",type="o",lwd=2)
lines(v8 ,col="yellow",type="o",lwd=2)
lines(v9 ,col="brown",type="o",lwd=2)
lines(v10 ,col="pink",type="o",lwd=2)
abline(h=seq(0,6000,500),v=seq(1,100,1),lty=3,lwd=0.2)
col <- names(count[1,2:10])
colors <- c("violet","blue","red","black","orange","green","cyan","yellow","brown","pink")
legend(1,6000,col,cex=0.8,col=colors,lty=1,lwd=2,bg="white")
count <- read.csv("연도별요양기관별보험청구건수_2001_2013_세로_의원제외.csv",
stringsAsFactors = FALSE)
colname <- count$년도
colname
count
colname <- count$년도
colname
v1 <- count[,2]/100000
v2 <- count[,3]/100000
v3 <- count[,4]/100000
v4 <- count[,5]/100000
v5 <- count[,6]/100000
v6 <- count[,7]/100000
v7 <- count[,8]/100000
v8 <- count[,9]/100000
v9 <- count[,10]/100000
v10 <- count[,11]/100000
plot(v1,xlab="",ylab="",ylim=c(0,6000),axes=FALSE,col="violet",type="o",lwd=2,
main=paste("연도별 요양 기관별 보험 청구 건수(단위:십만건)","\n",
"출처:건강보험심사평가원"))
axis(1,at=1:10,label=colname,las=2)
axis(2,las=1)
lines(v2 ,col="blue",type="o",lwd=2)
lines(v3 ,col="red",type="o",lwd=2)
lines(v4 ,col="black",type="o",lwd=2)
lines(v5 ,col="orange",type="o",lwd=2)
lines(v6 ,col="green",type="o",lwd=2)
lines(v7 ,col="cyan",type="o",lwd=2)
lines(v8 ,col="yellow",type="o",lwd=2)
lines(v9 ,col="brown",type="o",lwd=2)
lines(v10 ,col="pink",type="o",lwd=2)
abline(h=seq(0,6000,500),v=seq(1,100,1),lty=3,lwd=0.2)
col <- names(count[1,2:10])
colors <- c("violet","blue","red","black","orange","green","cyan","yellow","brown","pink")
legend(1,6000,col,cex=0.8,col=colors,lty=1,lwd=2,bg="white")
count <- read.csv("연도별요양기관별보험청구금액_2004_2013_세로.csv",
stringsAsFactors = FALSE)
colname <- count$년도
v1 <- count[,2]/1000000
v2 <- count[,3]/1000000
v3 <- count[,4]/1000000
v4 <- count[,5]/1000000
v5 <- count[,6]/1000000
v6 <- count[,7]/1000000
v7 <- count[,8]/1000000
v8 <- count[,9]/1000000
v9 <- count[,10]/1000000
v10 <- count[,11]/1000000
plot(v1,xlab="",ylab="",ylim=c(0,10000),axes=FALSE,col="violet",type="o",lwd=2,
main=paste("연도별 요양 기관별 보험 청구 금액 현황(단위:백만원)","\n",
"출처:건강보험심사평가원"))
axis(1,at=1:10,label=colname,las=2)
axis(2,las=1)
lines(v2 ,col="blue",type="o",lwd=2)
lines(v3 ,col="red",type="o",lwd=2)
lines(v4 ,col="black",type="o",lwd=2)
lines(v5 ,col="orange",type="o",lwd=2)
lines(v6 ,col="green",type="o",lwd=2)
lines(v7 ,col="cyan",type="o",lwd=2)
lines(v8 ,col="yellow",type="o",lwd=2)
lines(v9 ,col="brown",type="o",lwd=2)
lines(v10 ,col="navy",type="o",lwd=2)
abline(h=seq(0,15000,1000),v=seq(1,100,1),lty=3,lwd=0.2)
col <- names(count[1,2:11])
colors <- c("violet","blue","red","black","orange","green","cyan","yellow","brown","navy")
legend(1,10000,col,cex=0.8,col=colors,lty=1,lwd=2,bg="white")
mpg
mpg %>%
filter(manufacturer == 'toyota')
mpg %>%
filter(manufacturer == 'toyota') %>%
group_by(model) %>%
summarise(mean_mpg = avg((cty+hwy)/2)) %>%
arrange(desc(mean_mpg))
mpg %>%
filter(manufacturer == 'toyota') %>%
group_by(model) %>%
summarise(mean_mpg = mean((cty+hwy)/2)) %>%
arrange(desc(mean_mpg))
bb <- read.csv('야구성적.csv')
str(bb)
ggplot(bb, aes(x=선수명, y=연봉대비출루율, fill=선수명)) +
geom_bar(stat='identity')
ggplot(bb, aes(x=선수명, y=연봉대비출루율)) +
geom_bar(stat='identity')
ggplot(bb, aes(x=선수명, y=연봉대비출루율)) +
geom_bar(stat='identity') +
theme(axis.text.x=element_text(angle=45, hjust=1, vjust=1,
colour="black", size=8))
palete = brewer.pal(9, 'Set3')
ggplot(bb, aes(x=선수명, y=연봉대비출루율)) +
geom_bar(stat='identity', color=palete) +
theme(axis.text.x=element_text(angle=45, hjust=1, vjust=1,
colour="black", size=8))
palete = brewer.pal(25, 'Set3')
ggplot(bb, aes(x=선수명, y=연봉대비출루율)) +
geom_bar(stat='identity', color=palete) +
theme(axis.text.x=element_text(angle=45, hjust=1, vjust=1,
colour="black", size=8))
user_palette <- c("#999999", "#E69F00", "#56B4E9", "#009E73", "#F0E442","#0072B2", "#D55E00", "#CC79A7",
"#999999", "#E69F00", "#56B4E9", "#009E73", "#F0E442","#0072B2", "#D55E00", "#CC79A7",
"#999999", "#E69F00", "#56B4E9", "#009E73", "#F0E442","#0072B2", "#D55E00", "#CC79A7", "#888888")
ggplot(bb, aes(x=선수명, y=연봉대비출루율)) +
geom_bar(stat='identity', color=user_palette) +
theme(axis.text.x=element_text(angle=45, hjust=1, vjust=1,
colour="black", size=8))
ggplot(bb, aes(x=선수명, y=연봉대비출루율)) +
geom_bar(stat='identity', color=user_palette, fill=user_palette) +
theme(axis.text.x=element_text(angle=45, hjust=1, vjust=1,
colour="black", size=8))
palete = c(brewer.pal(12, 'Set3'), brewer.pal(12, 'Paired'), '#56B4E9')
ggplot(bb, aes(x=선수명, y=연봉대비출루율)) +
geom_bar(stat='identity', color=palete, fill=palete) +
theme(axis.text.x=element_text(angle=45, hjust=1, vjust=1,
colour="black", size=8))
palete = c(brewer.pal(12, 'Paired'), brewer.pal(12, 'Paired'), '#56B4E9')
ggplot(bb, aes(x=선수명, y=연봉대비출루율)) +
geom_bar(stat='identity', color=palete, fill=palete) +
theme(axis.text.x=element_text(angle=45, hjust=1, vjust=1,
colour="black", size=8))
ggplot(bb, aes(x=선수명, y=연봉대비출루율)) +
geom_bar(stat='identity', color=palete, fill=palete) +
geom_text(aes(y=연봉대비출루율),
colour="black",size=4) +
theme(axis.text.x=element_text(angle=45, hjust=1, vjust=1,
colour="black", size=8))
ggplot(bb, aes(x=선수명, y=연봉대비출루율)) +
geom_bar(stat='identity', color=palete, fill=palete) +
geom_text(aes(y=label, label=연봉대비출루율),
colour="black",size=4) +
theme(axis.text.x=element_text(angle=45, hjust=1, vjust=1,
colour="black", size=8))
ggplot(bb, aes(x=선수명, y=연봉대비출루율)) +
geom_bar(stat='identity', color=palete, fill=palete) +
geom_text(aes(y=10, label=연봉대비출루율), color="black", size=4) +
theme(axis.text.x=element_text(angle=45, hjust=1, vjust=1,
colour="black", size=8)) +
ggtitle('프로야구선수 밥값은 하고 있나?') +
theme(plot.title = element_text(face = "bold", hjust = 0.5,
size = 15, color = "darkblue"))
ggplot(bb, aes(x=선수명, y=연봉대비출루율)) +
geom_bar(stat='identity', color=palete, fill=palete) +
geom_text(aes(y=연봉대비출루율*0.5, label=연봉대비출루율),
color="black", size=4) +
theme(axis.text.x=element_text(angle=45, hjust=1, vjust=1,
colour="black", size=8)) +
ggtitle('프로야구선수 밥값은 하고 있나?') +
theme(plot.title = element_text(face = "bold", hjust = 0.5,
size = 15, color = "darkblue"))
ggplot(bb, aes(x=선수명, y=연봉대비출루율)) +
geom_bar(stat='identity', color=palete, fill=palete) +
geom_text(aes(y=연봉대비출루율+0.5, label=연봉대비출루율),
color="black", size=4) +
theme(axis.text.x=element_text(angle=45, hjust=1, vjust=1,
colour="black", size=8)) +
ggtitle('프로야구선수 밥값은 하고 있나?') +
theme(plot.title = element_text(face = "bold", hjust = 0.5,
size = 15, color = "darkblue"))
ggplot(bb, aes(x=선수명, y=연봉대비출루율)) +
geom_bar(stat='identity', color=palete, fill=palete) +
geom_text(aes(y=연봉대비출루율+1, label=연봉대비출루율),
color="black", size=3) +
theme(axis.text.x=element_text(angle=45, hjust=1, vjust=1,
colour="black", size=8)) +
ggtitle('프로야구선수 밥값은 하고 있나?') +
theme(plot.title = element_text(face = "bold", hjust = 0.5,
size = 15, color = "darkblue"))
ggplot(bb, aes(x=선수명, y=연봉대비출루율)) +
geom_bar(stat='identity', color=palete, fill=palete) +
geom_text(aes(y=연봉대비출루율+0.8, label=연봉대비출루율),
color="black", size=3) +
theme(axis.text.x=element_text(angle=45, hjust=1, vjust=1,
colour="black", size=8)) +
ggtitle('프로야구선수 밥값은 하고 있나?') +
theme(plot.title = element_text(face = "bold", hjust = 0.5,
size = 15, color = "darkblue"))
mean_obp = mean(bb$연봉대비출루율)
mean_obp = sum(bb$연봉대비출루율) / length(bb$연봉대비출루율)
mean_obp
mean_obp = sum(bb$연봉대비출루율) / length(bb$연봉대비출루율) *100
mean_obp
mean_obp <- mean_obp / 10
mean_obp
mean_obp = sum(bb$연봉대비출루율) / length(bb$연봉대비출루율) * 10
mean_obp <- mean_obp / 10
mean_obp
mean_obp = round(sum(bb$연봉대비출루율) / length(bb$연봉대비출루율), 1)
mean_obp
mean_obp = round(sum(bb$연봉대비출루율) / length(bb$연봉대비출루율), 2)
mean_obp
mean_obp = mean(bb$연봉대비출루율)
mean_obp
ggplot(bb, aes(x=선수명, y=연봉대비출루율)) +
geom_bar(stat='identity', color=palete, fill=palete) +
geom_text(aes(y=연봉대비출루율+0.8, label=연봉대비출루율),
color="black", size=3) +
theme(axis.text.x=element_text(angle=45, hjust=1, vjust=1,
colour="black", size=8)) +
ggtitle('프로야구선수 밥값은 하고 있나?') +
theme(plot.title = element_text(face = "bold", hjust = 0.5,
size = 15, color = "darkblue")) +
geom_hline(yintercept=mean_obp)
ggplot(bb, aes(x=선수명, y=연봉대비출루율)) +
geom_bar(stat='identity', color=palete, fill=palete) +
geom_text(aes(y=연봉대비출루율+0.8, label=연봉대비출루율),
color="black", size=3) +
theme(axis.text.x=element_text(angle=45, hjust=1, vjust=1,
colour="black", size=8)) +
ggtitle('프로야구선수 밥값은 하고 있나?') +
theme(plot.title = element_text(face = "bold", hjust = 0.5,
size = 15, color = "darkblue")) +
geom_hline(yintercept=mean_obp, color='grey')
ggplot(bb, aes(x=선수명, y=연봉대비출루율)) +
geom_bar(stat='identity', color=palete, fill=palete) +
geom_text(aes(y=연봉대비출루율+0.8, label=연봉대비출루율),
color="black", size=3) +
theme(axis.text.x=element_text(angle=45, hjust=1, vjust=1,
colour="black", size=8)) +
ggtitle('프로야구선수 밥값은 하고 있나?') +
theme(plot.title = element_text(face = "bold", hjust = 0.5,
size = 15, color = "darkblue")) +
geom_hline(yintercept=mean_obp, color='purple')
ggplot(bb, aes(x=선수명, y=연봉대비출루율)) +
geom_bar(stat='identity', color=palete, fill=palete) +
geom_text(aes(y=연봉대비출루율+0.8, label=연봉대비출루율),
color="black", size=3) +
theme(axis.text.x=element_text(angle=45, hjust=1, vjust=1,
colour="black", size=8)) +
ggtitle('프로야구선수 밥값은 하고 있나?') +
theme(plot.title = element_text(face = "bold", hjust = 0.5,
size = 15, color = "darkblue")) +
geom_hline(yintercept=mean_obp, color='purple', linetype = 'dashed')
ggplot(bb, aes(x=선수명, y=연봉대비출루율)) +
geom_bar(stat='identity', color=palete, fill=palete) +
geom_text(aes(y=연봉대비출루율+0.8, label=연봉대비출루율),
color="black", size=3) +
theme(axis.text.x=element_text(angle=45, hjust=1, vjust=0,
colour="black", size=8)) +
ggtitle('프로야구선수 밥값은 하고 있나?') +
theme(plot.title = element_text(face = "bold", hjust = 0.5,
size = 15, color = "darkblue")) +
geom_hline(yintercept=mean_obp, color='purple', linetype = 'dashed')
ggplot(bb, aes(x=선수명, y=연봉대비출루율)) +
geom_bar(stat='identity', color=palete, fill=palete) +
geom_text(aes(y=연봉대비출루율+0.8, label=연봉대비출루율),
color="black", size=3) +
theme(axis.text.x=element_text(angle=45, hjust=1, vjust=1,
colour="black", size=8)) +
ggtitle('프로야구선수 밥값은 하고 있나?') +
theme(plot.title = element_text(face = "bold", hjust = 0.5,
size = 15, color = "darkblue")) +
geom_hline(yintercept=mean_obp, color='purple', linetype = 'dashed')
